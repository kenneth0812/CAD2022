<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mde.tw - compilation</title><link href="https://mde.tw/blog/" rel="alternate"></link><link href="https://mde.tw/blog/feeds/compilation.atom.xml" rel="self"></link><id>https://mde.tw/blog/</id><updated>2022-08-26T23:16:01+08:00</updated><entry><title>編譯 CoppeliaSim 4.3.0 rev12</title><link href="https://mde.tw/blog/compile-coppeliasim-4.3.0-rev12.html" rel="alternate"></link><published>2022-08-26T11:00:00+08:00</published><updated>2022-08-26T23:16:01+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-26:/blog/compile-coppeliasim-4.3.0-rev12.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 採用 C++ 與 Qt 編寫, 安裝系統則利用 &lt;a href="https://www.pantaray.com/qsetup.html"&gt;QSetup&lt;/a&gt; 建立. 這裡希望編譯的是 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 原始碼中的 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 第 4.3.0 rev12 版, 是由 448 個 .cpp 編譯連結而成 coppeliaSim.dll, 檔案大小約為 9538 KB, 是 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 套件中最重要的核心程式庫 .&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 採用 C++ 與 Qt 編寫, 安裝系統則利用 &lt;a href="https://www.pantaray.com/qsetup.html"&gt;QSetup&lt;/a&gt; 建立. 這裡希望編譯的是 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 原始碼中的 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 第 4.3.0 rev12 版, 是由 448 個 .cpp 編譯連結而成 coppeliaSim.dll, 檔案大小約為 9538 KB, 是 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 套件中最重要的核心程式庫 .&lt;/p&gt;


&lt;h1&gt;config.pri&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 自 4.2.0 版之後, 所使用的 Lua 從 5.1 &lt;a href="https://www.coppeliarobotics.com/helpFiles/en/versionInfo.htm#coppeliaSim4.2.0"&gt;升級為 5.3&lt;/a&gt;, 配合設定的 config.pri 也必須修改如下:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
# location of boost headers:
    BOOST_INCLUDEPATH = "Y:/msys64_20210419/mingw64/include/boost"

# location of lua headers:
    LUA_INCLUDEPATH = "Y:/lua-5.3.5/src" 

# lua libraries to link:
    LUA_LIBS = "y:/lua-5.3.5/src/liblua.a" 

# qscintilla location:
    QSCINTILLA_DIR = "y:/QScintilla_gpl-2.11.2"

# qscintilla headers:
    QSCINTILLA_INCLUDEPATH = "$${QSCINTILLA_DIR}/include" "$${QSCINTILLA_DIR}/Qt4Qt5"

# qscintilla libraries to link:
    QSCINTILLA_LIBS = "$${QSCINTILLA_DIR}/libqscintilla2_qt5.dll.a" 

# Make sure if a config.pri is found one level above, that it will be used instead of this one:
    exists(../config.pri) { include(../config.pri) }
&lt;/pre&gt;

&lt;p&gt;由上列 config.pri 設定檔案可以得知, 編譯 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 之前, 必須要先編譯 lua-5.3.5 與 QScintilla_gpl-2.11.2, 分別取得對應的程式庫之後, 再編譯 CoppeliaSimLib.&lt;/p&gt;
&lt;h2&gt;編譯 Lua 5.3.5&lt;/h2&gt;
&lt;p&gt;Y:\lua-5.3.5&amp;gt;mingw32-make mingw&lt;/p&gt;
&lt;p&gt;可以建立 y:/lua-5.3.5/src/liblua.a&lt;/p&gt;
&lt;h2&gt;編譯 QScintilla&lt;/h2&gt;
&lt;p&gt;Location: Y:\QScintilla_gpl-2.11.2&lt;/p&gt;
&lt;p&gt;Compile:&lt;/p&gt;
&lt;p&gt;cd Qt4Qt5&lt;/p&gt;
&lt;p&gt;qmake -o Makefile qscintilla.pro&lt;/p&gt;
&lt;p&gt;mingw32-make&lt;/p&gt;
&lt;p&gt;to get libqscintilla2_qt5.dll.a under release directory&lt;/p&gt;
&lt;h2&gt;編譯 CoppeliaSimLib&lt;/h2&gt;
&lt;p&gt;config.pri 設定修改完成後, 執行 C:\acc_430_12\CoppeliaSimLib&amp;gt;qmake -o Makefile coppeliaSimLib.pro&lt;/p&gt;
&lt;p&gt;接著執行 C:\acc_430_12\CoppeliaSimLib&amp;gt;mingw32-make -f Makefile.Release&lt;/p&gt;
&lt;p&gt;編譯結束後, 可以在 Release 目錄中建立 coppeliaSim.dll, 這是 CoppeliaSim 的主要動態連結程式庫.&lt;/p&gt;
&lt;p&gt;下載可攜編譯系統: &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/Eb56ldJfZl9CiPU_5sb0-_4B5scF30r6z4FTQT__aWzkEA?e=zE8eVL"&gt;compile_copsim_cd2022.7z&lt;/a&gt; (for @gm users only)&lt;/p&gt;
&lt;p&gt;下載已經完成 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 編譯的檔案: [acc_430_12_compile_Lib.7z] (for @gm users only)&lt;/p&gt;
&lt;h1&gt;編譯 coppeliaSimClientApplication&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/CoppeliaRobotics/coppeliaSimClientApplication"&gt;coppeliaSimClientApplication&lt;/a&gt; 是呼叫 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 動態連結程式庫的客戶端應用程式. 編譯時必須位於 programming 目錄中:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
C:\acc_430_12\programming&gt;git clone --recurse-submodules https://github.com/CoppeliaRobotics/coppeliaSimClientApplication.git
Cloning into 'coppeliaSimClientApplication'...
remote: Enumerating objects: 170, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (5/5), done.
Receiving objects:  86% (145/170)sed 4 (delta 1), pack-reused 164eceiving objects:  82% (140/1
Receiving objects: 100% (170/170), 32.92 KiB | 2.99 MiB/s, done.
Resolving deltas: 100% (100/100), done.

C:\acc_430_12\programming&gt;cd coppeliasimclientapplication

C:\acc_430_12\programming\coppeliaSimClientApplication&gt;git checkout coppeliasim-v4.3.0-rev12
Note: switching to 'coppeliasim-v4.3.0-rev12'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c &lt;new-branch-name&gt;

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 306a6c1 updated copyright

C:\acc_430_12\programming\coppeliaSimClientApplication&gt;
&lt;/pre&gt;

&lt;p&gt;將 C:\acc_430_12\programming\coppeliaSimClientApplication\config.pri 修改為:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
# lua libraries to link:
    LUA_LIBS = "y:/lua-5.3.5/src/liblua.a" 

# location of lua headers:
    LUA_INCLUDEPATH = "Y:/lua-5.3.5/src" 

exists(../config.pri) { include(../config.pri) }
&lt;/pre&gt;

&lt;p&gt;而在建立 coppeliaSim.exe 之前, 需要再編輯 coppeliaSim_resource.rc 檔案, 下載 coppeliaSim.ico, 並且開啟 coppeliaSim.pro 中第 42 行 RC_ICONS += coppeliaSim.ico 設定, 以便將 coppeliaSim.ico 圖像編譯後放入 coppeliaSim.exe, coppeliaSim_resource.rc 設定內容如下:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
#include &lt;windows.h&gt;

IDI_ICON1   ICON    DISCARDABLE "C:/acc_430_12/programming/coppeliaSimClientApplication/coppeliaSim.ico"

VS_VERSION_INFO VERSIONINFO
    FILEVERSION 0,0,0,0
    PRODUCTVERSION 0,0,0,0
    FILEFLAGSMASK 0x3fL
#ifdef _DEBUG
    FILEFLAGS VS_FF_DEBUG
#else
    FILEFLAGS 0x0L
#endif
    FILEOS VOS__WINDOWS32
    FILETYPE VFT_DLL
    FILESUBTYPE 0x0L
    BEGIN
        BLOCK "StringFileInfo"
        BEGIN
            BLOCK "040904b0"
            BEGIN
                VALUE "CompanyName", "\0"
                VALUE "FileDescription", "\0"
                VALUE "FileVersion", "0.0.0.0\0"
                VALUE "LegalCopyright", "\0"
                VALUE "OriginalFilename", "coppeliaSim.exe\0"
                VALUE "ProductName", "coppeliaSim\0"
                VALUE "ProductVersion", "0.0.0.0\0"
            END
        END
        BLOCK "VarFileInfo"
        BEGIN
            VALUE "Translation", 0x0409, 1200
        END
    END
/* End of Version info */
&lt;/pre&gt;

&lt;p&gt;接下來就可以利用 qmake 建立 Makefile.Release, 並利用 mingw32-make 建立 coppeliaSim.exe&lt;/p&gt;
&lt;p&gt;C:\acc_430_12\programming\coppeliaSimClientApplication&amp;gt;qmake -o Makefile coppeliaSim.pro&lt;/p&gt;
&lt;p&gt;C:\acc_430_12\programming\coppeliaSimClientApplication&amp;gt;mingw32-make -f Makefile.Release&lt;/p&gt;
&lt;p&gt;可以在 release 目錄中取得 coppeliaSim.exe&lt;/p&gt;</content><category term="compilation"></category><category term="CoppeliaSim"></category></entry></feed>