<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mde.tw</title><link href="https://mde.tw/blog/" rel="alternate"></link><link href="https://mde.tw/blog/feeds/all.atom.xml" rel="self"></link><id>https://mde.tw/blog/</id><updated>2022-09-11T18:58:32+08:00</updated><entry><title>Replit 建立網站導引</title><link href="https://mde.tw/blog/replit_cmsimde_tutorial.html" rel="alternate"></link><published>2022-09-11T12:00:00+08:00</published><updated>2022-09-11T18:58:32+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-11:/blog/replit_cmsimde_tutorial.html</id><summary type="html">&lt;p&gt;這裡將說明如何利用 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 與 &lt;a href="https://github.com/mdecycu/cmsite"&gt;cmsite&lt;/a&gt; 建立動態與靜態網頁.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡將說明如何利用 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 與 &lt;a href="https://github.com/mdecycu/cmsite"&gt;cmsite&lt;/a&gt; 建立動態與靜態網頁.&lt;/p&gt;


&lt;h1&gt;在 Replit 上執行 cmsimde&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsite"&gt;cmsite&lt;/a&gt; 動態網站可以在 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 環境執行, 以下為設定步驟:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;建立 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 帳號&lt;/li&gt;
&lt;li&gt;登入 Email 驗證 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 寄出的註冊確認電子郵件&lt;/li&gt;
&lt;li&gt;利用 import repository, 以 &lt;a href="https://github.com/mdecycu/cmsite"&gt;cmsite&lt;/a&gt; 倉儲內容, 建立 repl&lt;/li&gt;
&lt;li&gt;進入 .replit 檔案設定頁面, 將 main.py 設定為啟動程式&lt;/li&gt;
&lt;li&gt;在 shell 介面執行 git submodule update --init --recursive, 取下 &lt;a href="https://github.com/mdecycu/cmsite"&gt;cmsite&lt;/a&gt; 倉儲中 cmsimde 子模組檔案&lt;/li&gt;
&lt;li&gt;在 shell 介面執行 pip install flask flask_cors bs4 lxml pelican markdown, 安裝 cmsimde 所需要的模組&lt;/li&gt;
&lt;li&gt;按下 Run, 啟動 main.py&lt;/li&gt;
&lt;li&gt;登入 &lt;a href="https://github.com/mdecycu/cmsite"&gt;cmsite&lt;/a&gt; 動態網站, 修改管理者密碼, 修改標題與內容後, 以 generate_pages 將動態網頁內容轉為靜態格式&lt;/li&gt;
&lt;li&gt;利用 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 中的 Version Control 功能, 將改版資料推向遠端倉儲&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;將 main.py 設定為啟動程式畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/replit_start_with_main_py.png" width="800"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;在 shell 介面安裝模組化面:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/replit_pip_install_lxml.png" width="800"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;script&gt;
var winkVideoData_replit1 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_replit1" height="600" muted="true" width="800"&gt;
&lt;source src="./../downloads/replit/cmsimde_site_on_replit_for_scrum3.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;/div&gt;</content><category term="Replit"></category><category term="cmsimde"></category><category term="replit"></category></entry><entry><title>免付費完結篇</title><link href="https://mde.tw/blog/the_end_of_free_service.html" rel="alternate"></link><published>2022-09-07T12:00:00+08:00</published><updated>2022-09-10T22:00:55+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-07:/blog/the_end_of_free_service.html</id><summary type="html">&lt;p&gt;天下沒有白吃的午餐. 2017 年 OpenShift 就曾經終止過免付費雲端應用服務, 2022 年GDrive 也才剛終止教育單位無限空間, &lt;a href="https://blog.heroku.com/next-chapter"&gt;上個月&lt;/a&gt;, 終於輪到 Heroku.&lt;/p&gt;
&lt;p&gt;不過就在此時, &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 即將在雲端應用程式服務界, 取而代之.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;天下沒有白吃的午餐. 2017 年 OpenShift 就曾經終止過免付費雲端應用服務, 2022 年GDrive 也才剛終止教育單位無限空間, &lt;a href="https://blog.heroku.com/next-chapter"&gt;上個月&lt;/a&gt;, 終於輪到 Heroku.&lt;/p&gt;
&lt;p&gt;不過就在此時, &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 即將在雲端應用程式服務界, 取而代之.&lt;/p&gt;


&lt;h1&gt;Heroku 的宣布&lt;/h1&gt;
&lt;p&gt;Starting October 26, 2022, we will begin deleting inactive accounts and associated storage for accounts that have been inactive for over a year. Starting November 28, 2022, we plan to stop offering free product plans and plan to start shutting down free dynos and data services. &lt;/p&gt;
&lt;p&gt;Heroku 進入所謂 next chapter 之後, 希望持續使用免費雲端應用程式服務的用戶, 可以轉往 &lt;a href="https://blog.replit.com/heroku-alternatives"&gt;https://blog.replit.com/heroku-alternatives&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;註冊 Replit 帳號&lt;/h1&gt;
&lt;p&gt;首先以 scrum1 與 cadlab 註冊帳號後, 將 cmsimde_site 透過 &lt;a href="https://replit.com/heroku"&gt;https://replit.com/heroku&lt;/a&gt; 轉換服務. 在 &lt;a href="https://docs.replit.com/hosting/deploying-http-servers"&gt;https://docs.replit.com/hosting/deploying-http-servers&lt;/a&gt; 的協助下, 應該就可以設法執行動態網頁或靜態網頁.&lt;/p&gt;
&lt;h1&gt;Replit 簡介&lt;/h1&gt;
&lt;p&gt;根據 &lt;a href="https://docs.replit.com/"&gt;https://docs.replit.com/&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Replit is a platform for creating and sharing software. You can write your code and host it all in the same place. Replit is also a place to learn how to code, so we have some awesome built-in educational features as well.&lt;/p&gt;
&lt;p&gt;Replit can do it all. It can replace your:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;code editor (e.g. VS Code, Sublime Text, IntelliJ IDEA)&lt;/li&gt;
&lt;li&gt;development environment (e.g. your operating system, and build tools like npm or pip)&lt;/li&gt;
&lt;li&gt;cloud provider (e.g. AWS, Netlify)&lt;/li&gt;
&lt;li&gt;team collaboration tools (e.g. Google Docs, GitHub)&lt;/li&gt;
&lt;li&gt;teaching tools (e.g. Canva, Moodle, Blackboard)&lt;/li&gt;
&lt;li&gt;learning tools (e.g. Codecademy, Coursera, Udemy, Udacity)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;免費帳號可建立不限數量的倉儲, 但只提供 500 MB 容量, 以及 500 MB 的記憶體, 加上 0.2-0.5 vCPUs, 因此大概只夠讓使用者測試了解 Replit 的使用流程以及配置方法.&lt;/p&gt;
&lt;p&gt;希望利用 Replit 配置靜態網頁者, 可以參考 &lt;a href="https://docs.replit.com/hosting/hosting-web-pages"&gt;https://docs.replit.com/hosting/hosting-web-pages&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;以 Replit 建立靜態網頁&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;選擇以 import from github 的方式建立 repl.&lt;/li&gt;
&lt;li&gt;選擇從 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; import 檔案&lt;/li&gt;
&lt;li&gt;language 選擇 html, css 與 javascript 類別&lt;/li&gt;
&lt;li&gt;將 repl 名稱從 cmsimte_site 改為 scrum1 (即與 account 名稱相同)&lt;/li&gt;
&lt;li&gt;隨即可以在 &lt;a href="https://scrum1.repl.co"&gt;https://scrum1.repl.co&lt;/a&gt; 看到靜態網頁&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Replit Flask 範例&lt;/h1&gt;
&lt;p&gt;Flask 基本範例&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from flask import Flask

app = Flask('app')

@app.route('/')
def hello_world():
    return 'Hello, World!'

app.run(host='0.0.0.0', port=8080)
&lt;/pre&gt;

&lt;p&gt;Flask 以 wsgi 執行&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from flask import Flask
from gevent.pywsgi import WSGIServer

app = Flask('app')

@app.route('/')
def hello_world():
    return 'Hello, World!'

#app.run(host='0.0.0.0', port=8080)
http_server = WSGIServer(('0.0.0.0', 8080), app)
http_server.serve_forever()
&lt;/pre&gt;

&lt;p&gt;Flask, wsgi 並壓縮資料&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from gevent import monkey
monkey.patch_all()
from flask import Flask
from gevent.pywsgi import WSGIServer
from flask_compress import Compress

app = Flask('app')
compress = Compress()
compress.init_app(app)

@app.route('/')
def hello_world():
    return 'Hello, World!'

#app.run(host='0.0.0.0', port=8080)
http_server = WSGIServer(('0.0.0.0', 8080), app)
http_server.serve_forever()
&lt;/pre&gt;

&lt;p&gt;Get from Google&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from flask import Flask, request 
from flask_cors import CORS
import requests

app = Flask(__name__)
CORS(app)

@app.route('/get_from_google')
@app.route('/')
def studlist():
  r = requests.get("https://google.com")
  return r.text

app.run(host="0.0.0.0", debug=True)
&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://replit.com/talk/ask/Can-someone-help-me-disable-cors-policy-so-other-repls-can-access-my-database/143997"&gt;Flask 與資料庫&lt;/a&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from flask import *
from flask_cors import CORS
from replit import db

app = Flask(__name__)
cors = CORS(app)
app.config['CORS_HEADERS'] = 'Content-Type'

@app.route("/set/&lt;name&gt;/&lt;data&gt;/")
def set(name, data):
  print(name + " = " + data)
  db[name] = data
  return ""

@app.route("/get/&lt;name&gt;/")
def get(name):
  return db[name]

app.run(host="0.0.0.0", debug=True)
&lt;/pre&gt;

&lt;h1&gt;nfulist 搬遷&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecourse/nfulist"&gt;https://github.com/mdecourse/nfulist&lt;/a&gt; 原先配置在 Heroku, 目前已經無法正常運作, 因此必須設法搬到 Replit.&lt;/p&gt;
&lt;p&gt;理論上, 在 Replit 可以將程式寫為:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from flask import Flask, request 
from flask_cors import CORS

import requests
import bs4
#import ssl

app = Flask(__name__)
CORS(app)

@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    column = request.args.get('column')

    if semester == None:
        semester = '1091'
    if courseno == None:
        courseno = '0762'

    headers = {'X-Requested-With': 'XMLHttpRequest'}

    url = 'https://qry.nfu.edu.tw/studlist.php?selyr=1091&amp;seqno=0762'
    try:
        result = requests.get(url, verify=False, timeout=3)
    except:
        return "Connection refused"
    soup = bs4.BeautifulSoup(result.text, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        #print(i[0])
        if column == "True":
            output +=i[0] + "&lt;/br&gt;"
        else:
            output +=i[0] + "\n"

    return output
    #return  str(pselyr) + " + " +str(pseqno)

# 即使在近端仍希望以 https 模式下執行
#context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
#context.load_cert_chain('localhost.crt', 'localhost.key')

app.run(host="0.0.0.0", debug=True)
&lt;/pre&gt;

&lt;p&gt;但是 qry.nfu.edu.tw 主機先前可以透過 Heroku 遠端連線, 但是卻拒絕 Replit 虛擬主機的連線取值, 因此 nfulist 網際程式必須另外配置在工作站室中的 Server 或另外再找合用的雲端應用程式伺服器.&lt;/p&gt;
&lt;p&gt;在近端執行的 nfulist 程式碼為 (&lt;a href="./../downloads/flask/nfulist_local_8080.py"&gt;nfulist_local_8080.py&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import os
from flask import Flask, request 
from flask_cors import CORS
import requests
import bs4
#import ssl
# cpa: http://localhost:8080/?semester=1111&amp;courseno=0747&amp;column=True
# cpb: http://localhost:8080/?semester=1111&amp;courseno=0761&amp;column=True
# cada: http://localhost:8080/?semester=1111&amp;courseno=0773&amp;column=True
# cadb: http://localhost:8080/?semester=1111&amp;courseno=0786&amp;column=True

app = Flask(__name__)
CORS(app)

@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    column = request.args.get('column')

    if semester == None:
        semester = '1091'
    if courseno == None:
        courseno = '0762'

    url = 'https://qry.nfu.edu.tw/studlist.php?selyr=' + semester+ '&amp;seqno=' + courseno
    try:
        result = requests.get(url, timeout=3)
    except:
        return "Connection refused"
    return result.text
    soup = bs4.BeautifulSoup(result.text, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        #print(i[0])
        if column == "True":
            output +=i[0] + "&lt;/br&gt;"
        else:
            output +=i[0] + "\n"

    return output
    #return  str(pselyr) + " + " +str(pseqno)

# 即使在近端仍希望以 https 模式下執行
#context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
#context.load_cert_chain('localhost.crt', 'localhost.key')

app.run(host="0.0.0.0", port=8080, debug=True)
&lt;/pre&gt;

&lt;h1&gt;配置 cmsimde_site&lt;/h1&gt;
&lt;p&gt;在 Replit 配置 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; 的隨選動態網站位於: &lt;a href="https://cmsimdesite.nfulist.repl.co"&gt;https://cmsimdesite.nfulist.repl.co&lt;/a&gt;, 而常駐靜態網站則另外配置於 &lt;a href="https://scrum1.repl.co"&gt;https://scrum1.repl.co&lt;/a&gt;. 由於這兩個 repl 中的檔案並沒能同步, 因此在 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 目前針對 repl 無法直接更改執行的 language 情況下, 配置 cmsimde 網際內容管理的方式如下.&lt;/p&gt;
&lt;h1&gt;&lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 與 Github Pages 結合&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 雖然以雲端 IDE 自稱, 其實是一個使用者友善的雲端應用程式服務, 使用者在各種 language 設定下, 儘管目前只能選定一種執行模式, 但多重的應用服務, 可以藉著 Version Control 功能, 與 Github 倉儲結合, 能夠採下列流程, 部署 cmsimde 網際內容管理的動態與靜態網站內容.&lt;/p&gt;
&lt;p&gt;基本的使用流程是: 將動態網站部署在 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt;, 且使用該動態網站內容建立對應的 Github 倉儲, 並且在 Github 端設定 Pages, 以便用來伺服與 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 動態網站同步的靜態網站.&lt;/p&gt;
&lt;p&gt;結合兩者的前提是, cmsimde 網站的 .gitignore 必須事先修改為:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
 # Byte-compiled
__pycache__/
venv/
 &lt;/pre&gt;

&lt;p&gt;表示在 Github Pages 端的倉儲, 並不需要 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 端的虛擬 Python 與設定檔案, 只要提供 cmsimde 的完整倉儲資料即可.&lt;/p&gt;
&lt;p&gt;另外一個重點是: 雖然 cmsimde 所需要的 Python modules, 在利用 main.py 啟動 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 端的動態網站時, 會自動安裝, 但 lxml 模組卻不會隨之安裝.&lt;/p&gt;
&lt;p&gt;因此必須手動進入 shell, 以 pip 安裝 lxml.&lt;/p&gt;
&lt;p&gt;pip install lxml&lt;/p&gt;
&lt;p&gt;完成上述準備動作後, 接著修改 cmsimde 目錄下的  flaskapp.py, 處理 nocache.py 導入模組為:&lt;/p&gt;
&lt;p&gt;from .nocache import nocache&lt;/p&gt;
&lt;p&gt;或者 cmsimde 子模組中的程式內容不變, 但必須將 cmsimde/nocache.py 複製一份至根目錄.&lt;/p&gt;
&lt;p&gt;最後再執行 main.py:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from cmsimde import flaskapp

flaskapp.app.run(host='0.0.0.0', port=8080)
&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 端的動態網站就可以啟動: &lt;a href="https://c.scrum1.repl.co"&gt;https://c.scrum1.repl.co&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;只要再處理 Github Pages 端倉儲的同步, 就可以得到靜態網站: &lt;a href="https://scrum-1.github.io/c"&gt;https://scrum-1.github.io/c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;若資料直接先從 Github 倉儲進行改版, 則在 &lt;a href="https://replit.com"&gt;Replit&lt;/a&gt; 端的 Version Control, 可以利用 pull, 將改版內容取回合併.&lt;/p&gt;</content><category term="Free"></category><category term="heroku"></category><category term="replit"></category></entry><entry><title>有關 Wink</title><link href="https://mde.tw/blog/about-wink.html" rel="alternate"></link><published>2022-09-07T11:00:00+08:00</published><updated>2022-09-07T14:37:06+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-07:/blog/about-wink.html</id><summary type="html">&lt;p&gt;這裡將收集與 Wink 有關的資料內容. Wink 是一套製作電腦操作展示的 freeware. 從 3.0 版之後, 所製作的教學影片以 ffmpeg 存為 mp4 格式, 並透過 Javascript 在網頁上與使用者進行互動.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡將收集與 Wink 有關的資料內容. Wink 是一套製作電腦操作展示的 freeware. 從 3.0 版之後, 所製作的教學影片以 ffmpeg 存為 mp4 格式, 並透過 Javascript 在網頁上與使用者進行互動.&lt;/p&gt;


&lt;h1&gt;Wink 下載&lt;/h1&gt;
&lt;p&gt;Wink 3.0 可直接從 &lt;a href="https://www.debugmode.com/wink/"&gt;https://www.debugmode.com/wink/&lt;/a&gt; 下載. ffmpeg.exe 則可從&lt;a href="https://github.com/BtbN/FFmpeg-Builds/releases"&gt;這裡&lt;/a&gt;下載.&lt;/p&gt;
&lt;p&gt;每一個 wink 影片嵌入網頁時, 在同一頁面下的多個影片檔案, 都要有獨一的 data-varname 變數名稱, 在 cmsimde 架構下:
data-dirname 動態網頁 - 使用 /static&lt;/p&gt;
&lt;p&gt;靜態網頁 - 使用 ./../cmsimde/static&lt;/p&gt;
&lt;p&gt;然後動態網頁 mp4 video 標註 src - 使用 /downloads/影片名稱.mp4&lt;/p&gt;
&lt;p&gt;靜態網頁 mp4 video 標註 src - 使用 ./../downloads/影片名稱.mp4&lt;/p&gt;
&lt;p&gt;在 Blog 架構下, 則一律先將 .mp4 檔案 acp (git add, git commit and git push) 至 Github 倉儲後, 再使用靜態網頁連結 .mp4 與 data-dirname 設定.&lt;/p&gt;
&lt;p&gt;假如 Wink 影片內容為單一程式視窗, 其導入影片寬高尺寸可使用 800 x 600, 若影片操作範圍擴及整個操作系統畫面, 則建議導入影片寬高尺寸為 1008 x 630.&lt;/p&gt;
&lt;p&gt;以下為兩個 Wink3 官方釋出的 Tutorial (已經全數刪除原先的 buttons, 並直接使用 html5 的 video controls):&lt;/p&gt;
&lt;p&gt;Tutorial1:&lt;/p&gt;
&lt;script&gt;
var winkVideoData_tutorial1 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_tutorial1" height="600" muted="true" width="800"&gt;
&lt;source src="./../downloads/wink_tutorial/tutorial1.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;/div&gt;

&lt;p&gt;Tutorial 2:&lt;/p&gt;
&lt;!-- 每一個 wink 影片都要有獨立的 data-varname 變數名稱
data-dirname 則區分動態網頁 - 使用 /static
與靜態網頁 - 使用 ./../cmsimde/static
然後動態網頁 mp4 - 使用 /downloads/影片名稱.mp4
與靜態網頁 - 使用 ./../downloads/影片名稱.mp4
 --&gt;
&lt;script&gt;
var winkVideoData_tutorial2 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_tutorial2" height="600" muted="true" width="800"&gt;
&lt;source src="./../downloads/wink_tutorial/tutorial2.mp4" type="video/mp4"/&gt;&lt;/video&gt;&lt;/div&gt;

&lt;p&gt;上述嵌入 Tutorial1 Wink3 mp4 影片的超文件內容如下:&lt;/p&gt;
&lt;pre class="brush: html"&gt;
&amp;lt;script&amp;gt;
var winkVideoData_tutorial1 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&amp;lt;/script&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&amp;gt;
&amp;lt;div class="winkVideoContainerClass"&amp;gt;&amp;lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_tutorial1" height="600" muted="true" width="800"&amp;gt;
&amp;lt;source src="./../downloads/wink_tutorial/tutorial1.mp4" type="video/mp4"/&amp;gt;&amp;lt;/video&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;br \&amp;gt;
&lt;/pre&gt;</content><category term="Wink"></category><category term="mp4"></category><category term="ffmpeg"></category><category term="javascript"></category></entry><entry><title>有關 Github Classroom</title><link href="https://mde.tw/blog/about-classroom.html" rel="alternate"></link><published>2022-09-03T11:00:00+08:00</published><updated>2022-09-05T00:11:42+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-03:/blog/about-classroom.html</id><summary type="html">&lt;p&gt;這裡將收集與 Github Classroom 有關的資料內容. &lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡將收集與 Github Classroom 有關的資料內容. &lt;/p&gt;


&lt;h1&gt;Github Classroom&lt;/h1&gt;
&lt;p&gt;登入 Github 帳號, 並連線至 &lt;a href="https://classroom.github.com/"&gt;https://classroom.github.com/&lt;/a&gt; 後, 選擇 Sign in and Get Started, 就可以加入 Github Classroom: &lt;a href="https://github.com/education/classroom"&gt;https://github.com/education/classroom&lt;/a&gt;. 授權讓 classroom 程式管理 organization 帳號下的所有倉儲, 其中最重要的功能就是, 可以由管理者管控是否 enable invite link, 讓取得連結的學員參與作業與專案倉儲管理, 並且可以透過 organization 中的 Member privileges 設定讓使用者建立 Github Pages, 但限制其刪除 organization 下作業倉儲的權限..&lt;/p&gt;
&lt;p&gt;加入 Github classroom 後, 將跳出相關說明: A classroom is a space where you can create assignments, collaborate with teaching assistants, and invite students in a single course.&lt;/p&gt;
&lt;p&gt;由於 GitHub Classroom uses organization accounts to manage permissions, administration, and security for classrooms. You can create a Classroom in any organization you own.&lt;/p&gt;
&lt;p&gt;意即, 當 Github 使用者加入 Github Classroom 之後, 就可以透過該帳號下的 organization 來新增 assignments 或協同 project, 當該 orgainzation 的管理者透過 Github Classroom 設定 assignment 之後, 該 assignment 就會產生一組 invite link 網址, 且與管理者所選定的倉儲作為 template 之後, 任何 Github 用戶只要連結到該 assignment 對應的網址, 並且同意加入後, 就可以在該 assignment 權限設定下讓用戶對倉儲擁有管理權.&lt;/p&gt;
&lt;p&gt;假設該作業倉儲名稱為 site, 且使用者帳號名稱為 scrum-2, 則納入該 assignment 後, 就會在 organization 名稱下建立一個名稱為 site-scrum-2 的倉儲, 而先前所使用的 template 若為 cmsite, 則該選定接受 assignment 的使用者就可以全權管理該作業倉儲. 一旦學員將倉儲設定 Github Pages 對應分支後, 該作業網址將為: https://organization_名稱.github.io/site-scrum-2&lt;/p&gt;
&lt;h2&gt;invite link 時效&lt;/h2&gt;
&lt;p&gt;當所有修課學員都參與指定作業後, 可以進入 assignment 設定, 取消 invite link.&lt;/p&gt;
&lt;h2&gt;學員作業倉儲權限&lt;/h2&gt;
&lt;p&gt;當課程中止, 由於學員僅具備管理作業倉儲改版與 Github Pages 設定權限, 因此可以永久保留該學員所繳交的作業倉儲內容.&lt;/p&gt;
&lt;h1&gt;Github Classroom 功能&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/education/classroom"&gt;https://github.com/education/classroom&lt;/a&gt; 採用 Ruby 編寫, 是一套輔助教學的 Web-based 程式, 其功能如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用管理者的 organization 當作 Github 帳號, 以 invite link 讓學員自行建立 assignment 或 協同 project 倉儲.&lt;/li&gt;
&lt;li&gt;assignment 倉儲的 template 可由管理者指定, 且學員對 assignment 倉儲所具備的管理權限, 可由管理者事前統一設定.&lt;/li&gt;
&lt;li&gt;管理者可以控制學員所建立的 assignment 倉儲, 令其無法 delete, 因此課堂結束後管理者仍可完整保留學員的課程倉儲.&lt;/li&gt;
&lt;li&gt;當管理者賦予學員對 assignment 倉儲擁有 admin 權限後, 學員可自行啟用倉儲的 Github Pages 功能, 利用倉儲內容建立課程網站.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Github"></category><category term="Classroom"></category></entry><entry><title>有關 NX</title><link href="https://mde.tw/blog/about-nx.html" rel="alternate"></link><published>2022-09-02T11:00:00+08:00</published><updated>2022-09-04T20:19:49+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-02:/blog/about-nx.html</id><summary type="html">&lt;p&gt;這裡將收集與 NX 有關的資料內容. Siemens NX 在 2022.09.01 釋出最新版本為 NX2206.4020, 幾乎同步釋出的 NX2027 最新版本則為 build 3401. cd2022 電腦輔助設計與實習將使用 NX2027.3401 可攜版本.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡將收集與 NX 有關的資料內容. Siemens NX 在 2022.09.01 釋出最新版本為 NX2206.4020, 幾乎同步釋出的 NX2027 最新版本則為 build 3401. cd2022 電腦輔助設計與實習將使用 NX2027.3401 可攜版本.&lt;/p&gt;


&lt;h2&gt;Recent Opened Files&lt;/h2&gt;
&lt;p&gt;啟動 NX 時將 HOME 以及 UGII_TMP_DIR 設定至 Temp 子目錄後, Recent Opened Files 資料會存入 Temp 目錄, 當 NX 啟動後, 會將資料轉存至 電腦\HKEY_CURRENT_USER\SOFTWARE\Unigraphics Solutions\NX\2027\General\Parts\Recent, 若希望刪除此類資料, 則必須在重新啟動 NX 之前, 分別刪除 Temp 目錄下的所有檔案, 並以 regedit 進入將 Recent 項目下的 Native 機碼刪除.&lt;/p&gt;
&lt;p&gt;以下為啟動 NX 時所設定的環境變數:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
set HOME=%cd%\Temp
set UGII_TMP_DIR=%cd%\Temp\
&lt;/pre&gt;

&lt;h2&gt;NX 繪圖與組立&lt;/h2&gt;
&lt;p&gt;基本的 NX2027.3401 繪圖與組立, 只需要下列目錄:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
DESIGNSPACEEXPLORER : 7.31 KB
DESIGN_TOOLS : 275.8 MB
DIAGRAMCORE : 5.81 MB
DIAGRAMMING : 64.65 MB
DRAFTING : 123.65 MB
DXFDWG : 206.79 MB
IGES : 5.2 MB
INSTALL : 55.55 KB
MECHATRONICS : 212.81 MB
NXASSEMBLY : 120.98 MB
NXBIN : 5.07 GB
NXPARTS : 53.76 MB
STEP203UG : 1.28 MB
STEP214UG : 1.27 MB
temp : 0B
TRANSLATORS : 157.87 MB
UGFLEXLM : 29.4 MB
UGII : 677.93 MB
UGMANAGER : 117.29 MB
UGOPEN : 425.32 MB
UGOPENPP : 567.28 KB
UNFOLD : 71.92 KB
total: 7.49 GB
&lt;/pre&gt;

&lt;h1 id="siemenssupportcenter"&gt;Siemens Support Center&lt;/h1&gt;

&lt;p&gt;從 &lt;a href="https://support.sw.siemens.com/en-US/"&gt;https://support.sw.siemens.com/en-US/&lt;/a&gt; 下載檔案後, 可以利用 certutil 工具驗證檔案.&lt;/p&gt;
&lt;p&gt;驗證下載檔案:&lt;/p&gt;
&lt;p&gt;使用工具: &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/certutil"&gt;https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/certutil&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;指令: certutil -hashfile SiemensNX-2027.3401_wntx64.zip SHA512&lt;/p&gt;
&lt;p&gt;SHA512 hash: f180a6c97b9599af0bc6068d344eeb8ea065f79648f64fea9c782fd41e00e430e04aad85c0d09705071c60ea9493c9e75f39e8bf0f22660c3dcb6cbc7819274a&lt;/p&gt;
&lt;h1 id="portablenx"&gt;Portable NX&lt;/h1&gt;

&lt;p&gt;在 Windows 10 配置可攜 NX2027.3401 程式, 需要:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Bioruebe/UniExtract2"&gt;https://github.com/Bioruebe/UniExtract2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wixtoolset/wix3/releases/tag/wix3112rtm"&gt;https://github.com/wixtoolset/wix3/releases/tag/wix3112rtm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;等兩項工具, UniExtract2 用來解開 SiemensNX-2027_wntx64\nx\SiemensNX.msi, 以及 .msi, 而 wix 則用來解開 SiemensNX-2027_wntx64\nx\VC_redist.x64.exe, 指令為:&lt;/p&gt;
&lt;p&gt;wix311-binaries\dark.exe vc_redist.x64.exe -x x64-extracted&lt;/p&gt;
&lt;p&gt;表示要在 x64-extracted 目錄中取得 x64-extracted\AttachedContainer\packages\vcRuntimeMinimum_amd64\vc_runtimeMinimum_x64.msi 之後, 再利用 UniExtract2 解開所需的 dll 檔案後, 再放入 NXBIN 目錄.&lt;/p&gt;
&lt;p&gt;製作 Portable NX2207 的步驟請參考以下影片(以 NX1980 為例):&lt;/p&gt;
&lt;p&gt;解開 SiemensNX.msi 合計得到 151803 個檔案, 而將 VC_redist.x64.exe 解開後的 52 個 dll 檔案放入 NXBIN 目錄中.&lt;/p&gt;
&lt;script&gt;
var winkVideoData = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData" height="630" muted="true" width="1008"&gt;
&lt;source src="./../downloads/w5_portable_nx1980.mp4" type="video/mp4"/&gt;&lt;/video&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;完成 NX2027.3401 可攜系統製作後, 各目錄檔案容量如下:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
AUTOMATED_TESTING : 1.52 MB
AUTOMATION_DESIGNER : 254.08 MB
CAPITALINTEGRATION : 2.04 MB
CATIAV5 : 784.01 KB
CLOUDDM : 31.07 KB
CMM_INSPECTION : 143.31 MB
DESIGNSPACEEXPLORER : 7.31 KB
DESIGN_TOOLS : 275.8 MB
DIAGRAMCORE : 5.81 MB
DIAGRAMMING : 64.65 MB
DRAFTING : 123.65 MB
DXFDWG : 206.79 MB
IGES : 5.2 MB
INSTALL : 55.55 KB
LOCALIZATION : 1.09 GB
MACH : 1.96 GB
MANUFACTURING_PLANNING : 141.66 MB
MBD : 54.05 MB
MECH : 793.28 MB
MECHATRONICS : 212.81 MB
MENDIXREPORTING : 1.04 MB
MOLDCOOLING : 12.28 KB
MOLDWIZARD : 226.71 MB
MPA : 1.5 MB
NXAECDESIGN : 15.48 KB
NXASSEMBLY : 120.98 MB
NXBIN : 5.04 GB
NXCABLEROUTER : 190.45 KB
NXCAE_EXTRAS : 2.36 GB
NXCOATINGS : 645.3 KB
NXCREO : 6.17 MB
NXHUMAN : 247.51 MB
NXJOIN : 16.38 MB
NXNASTRAN : 2.93 GB
NXPARTS : 53.76 MB
NXPLOT : 151.34 MB
NXPROE : 6.17 MB
NXREPORTS : 9.42 MB
NXSHIP : 359.0 MB
NXSTRUCTUREDESIGN : 106.47 MB
NXVR : 441.53 MB
NX_VSA : 13.88 MB
OCCUPANTSAFETY : 514.74 MB
POSTBUILD : 37.65 MB
PSTUDIO : 35.5 MB
PVTRANS : 102.46 KB
REL_INFO : 36.92 KB
ROUTING : 315.47 MB
RULE : 316.7 KB
SIMULATION : 4.19 GB
STAGE_MODEL : 3.53 MB
STAMPING_TOOLS : 77.06 MB
STEP203UG : 1.28 MB
STEP214UG : 1.27 MB
TDP : 237.62 MB
TOOLING_BASE : 970.0 KB
TRANSLATORS : 157.87 MB
UGALLIANCE : 82.9 KB
UGAUTOMOTIVE : 99.41 MB
UGCATIA : 6.53 MB
UGFLEXLM : 29.4 MB
UGFPCD : 35.19 KB
UGII : 677.93 MB
UGIMW : 8.45 MB
UGMANAGER : 117.29 MB
UGOPEN : 425.32 MB
UGOPENPP : 567.28 KB
UGPCBX : 3.42 MB
UGPCBXCHANGE : 90.23 MB
UGPHOTO : 2.98 GB
UGSTRUCTURES : 735.35 MB
UGSTUDIO : 14.03 MB
UGTIPS : 278.35 MB
UGTO2D : 911.38 KB
UGWEB : 9.08 MB
UGWELD : 2.07 MB
UNFOLD : 71.92 KB
VDA : 25.44 KB
VDV : 13.11 KB
total: 28.29 GB
&lt;/pre&gt;

&lt;p&gt;請注意: 新版 NX 所建立的零組件無法由舊版的 NX 開啟.&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/Eb7GeAUGMANEkijnWXGNH60BltYzKwkkffas3JhzgwnmxQ?e=K4HKXF"&gt;NX12.0.2.9_lite_cad2022.7z&lt;/a&gt; (for @gm users only, 1.20 GB, 解開後 6.24 GB)&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/EfvS63_7udVPhe-xlXrYPCMBVTUEEona5_QXwHdZD_8Vww?e=LNczOS"&gt;NX2027.3401_lite_cad2022.7z&lt;/a&gt; (for @gm users only, 1.97 GB, 解開後 7.49 GB)&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/EfC-9gy1PN9MmJtpD9VO5KcB3kehP6VVVgmQt3ej5D_BIQ?e=deXuWs"&gt;NX2027.3401_cad2022.7z&lt;/a&gt; (for @gm users only, 8.02 GB, 解開後 28.32 GB)&lt;/p&gt;
&lt;h1 id="nx2007doc"&gt;NX2007 Documentation&lt;/h1&gt;

&lt;p&gt;2022.09 &lt;a href="https://support.sw.siemens.com/en-US/"&gt;https://support.sw.siemens.com/en-US/&lt;/a&gt; 只提供 NX2206 與 NX2007 的 Documentation, 這裡將採用 NX2007 的英文手冊.&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/EU-fmibMpBZKg2ZiXmBlK-oBQj7wLV5YeMGI8rCI60NhmQ?e=EuxlyD"&gt;NX2007_documentation.7z&lt;/a&gt; (for @gm users only, 2.18 GB, 解開後 2.86 GB), 使用時執行 start_static.py 後, 以瀏覽器 http://localhost:7443 開啟. 也可以透過 &lt;a href="http://c1.cycu.org:88"&gt;http://c1.cycu.org:88&lt;/a&gt; 查看內容.&lt;/p&gt;
&lt;p&gt;線上 &lt;a href="https://docs.sw.siemens.com/en-US/release/209349590/NX%202007%20Series"&gt;NX2007 EN Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;滑鼠&lt;/h1&gt;
&lt;p&gt;LMB - 滑鼠左鍵, 一般元件選擇, 可以連續使用滑鼠左鍵選擇多個元件&lt;/p&gt;
&lt;p&gt;Shitf + LMB - 可以去除利用滑鼠左鍵已經選擇的元件&lt;/p&gt;
&lt;p&gt;RMB - 滑鼠右鍵, 在視圖空白按住滑鼠右鍵, 可以帶出相關 menu&lt;/p&gt;
&lt;p&gt;MMB - 滑鼠中鍵, 單擊表示 confirm 確認, 按住中鍵移動則可以旋轉觀測視圖 (rotate), 前後滑動中鍵則可放大縮小觀測視圖 (zoom in or out)&lt;/p&gt;
&lt;p&gt;MMB + RMB - 同時按住滑鼠中鍵與右鍵後移動, 可以平移觀測視圖 (pan), 相同功能也可以同時按住 Shift 與滑鼠中鍵後移動滑鼠, 以執行 pan 動作&lt;/p&gt;
&lt;p&gt;ESC - 取消&lt;/p&gt;
&lt;p&gt;F4 - 帶出上一個執行功能&lt;/p&gt;
&lt;p&gt;F6 - Zoom, 以滑鼠左鍵在視圖中選擇放大的區域&lt;/p&gt;
&lt;p&gt;F7 - Rotate, 進入此功能後, 可以使用任一滑鼠鍵移動, 執行旋轉視圖功能&lt;/p&gt;
&lt;p&gt;F8 - Snap view, 轉到與目前視圖最接近的正向視圖&lt;/p&gt;
&lt;p&gt;Ctrl + f - Fit&lt;/p&gt;
&lt;p&gt;Ctrl + l - Layer Settings&lt;/p&gt;
&lt;h1&gt;Layers&lt;/h1&gt;
&lt;p&gt;NX 提供 256 個圖層 (Layers)&lt;/p&gt;
&lt;p&gt;layers objects&lt;/p&gt;
&lt;p&gt;1 - 20 solids&lt;/p&gt;
&lt;p&gt;21 - 40 sketches&lt;/p&gt;
&lt;p&gt;41 - 60 curves&lt;/p&gt;
&lt;p&gt;61 - 80 reference elements&lt;/p&gt;
&lt;p&gt;81 - 100 faces&lt;/p&gt;
&lt;p&gt;101 - 120 PMI&lt;/p&gt;
&lt;p&gt;Ctrl + l - Layer Settings&lt;/p&gt;</content><category term="NX"></category><category term="Siemens"></category></entry><entry><title>cp2022_w1</title><link href="https://mde.tw/blog/cp2022-w1.html" rel="alternate"></link><published>2022-09-01T13:00:00+08:00</published><updated>2022-09-11T07:50:23+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-01:/blog/cp2022-w1.html</id><summary type="html">&lt;p&gt;計算機程式課程第一週, 只有 1b 有課, 1a 因為中秋節放假.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;計算機程式課程第一週, 只有 1b 有課, 1a 因為中秋節放假.&lt;/p&gt;


&lt;h1&gt;cadlab 網路設定&lt;/h1&gt;
&lt;p&gt;目前電腦輔助設計室 (cadlab) 中絕大部分的電腦都只有一個磁區 (假如有三個磁區的電腦是上一代的舊電腦), 使用的操作系統是 Windows 10, 因為系上有四門課程在電腦輔助設計室上課時, 採用的是純 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 網路連線, 因此各位學員在接觸到計算機程式課程時, 必須學會設定電腦系統的網路連線.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 與 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 與 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 是兩種不相容的網路協定. 目前除了計算機程式課程, 還有網際內容管理、電腦輔助設計與實習以及協同產品設計實習等課程, 上課時都將電腦輔助設計室的連外網路直接與系上主幹連接. 目的是希望擴大每一台電腦的網路頻寬, 可以無需透過 &lt;a href="https://en.wikipedia.org/wiki/Network_address_translation"&gt;NAT&lt;/a&gt; 轉址後再連接到系上.&lt;/p&gt;
&lt;p&gt;但是這樣做, 所要付出的代價是, 首先, 每一台電腦都直接以 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 外部網路位址與網際網路相通, 若此時電腦中的 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 也同時開啟的話, 安裝在操作系統中的某些軟體會以為已經取得 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 的外部網路位址 (其實並沒有, 因此系上已經沒有額外的外部 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 網路位址), 而啟動網路攻擊. 因而導致操作系統所安裝的防毒軟體作動, 關閉電腦的所有對外網路連線.&lt;/p&gt;
&lt;p&gt;結論是: 當電腦輔助設計室網路線直接連到外網主幹時, 要設法關閉 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 網路連線, 否則無法使用網路.&lt;/p&gt;
&lt;p&gt;其次, &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 網路協定雖然已經逐漸普及, 但目前仍有許多網站只支援 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 網路協定, 因此在純 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 網路設定下, 若要連接至某些只支援 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 的電腦或網站, 必須透過代理主機 (Proxy Server, 這裡所使用的代理主機執行 &lt;a href="http://www.squid-cache.org/"&gt;Squid&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;學習議題&lt;/h2&gt;
&lt;p&gt;為什麼會有 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv4"&gt;IPv4&lt;/a&gt; 與 &lt;a href="https://zh.wikipedia.org/zh-tw/IPv6"&gt;IPv6&lt;/a&gt; 兩種網路協定並存?&lt;/p&gt;
&lt;p&gt;上計算機程式課程時, 當使用瀏覽器與執行 git 指令時, 該如何正確設定網路協定?&lt;/p&gt;
&lt;h1 id="learnbrython"&gt;線上學習 Brython&lt;/h1&gt;

&lt;p&gt;當你完成電腦輔助設計室中的&lt;a href="https://mde.tw/blog/2022-Fall-Intro-to-computer-programming.html#networksetup"&gt;網路設定&lt;/a&gt;後, 就可以利用瀏覽器連線到&lt;a href="https://mde.tw/content/Python.html"&gt;這裡&lt;/a&gt;, 直接在線上學習 &lt;a href="https://brython.info/"&gt;Brython&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;學員課程網頁&lt;/h1&gt;
&lt;p&gt;cp2022 課程中的 cp 為 computer programming 的縮寫, 每一位學員各自建立 Github 帳號後, 將在 &lt;a href="https://ethercalc.net/"&gt;https://ethercalc.net/&lt;/a&gt; 中登錄用於課程的 Github 帳號. 之後將配合 Github Classroom 建立學員課程網頁. 此一網頁倉儲分為靜態與動態等兩個部分, 靜態網頁是配合 Github Pages, 直接由 Github.com 提供對應網址, 而動態網頁則可在近端用於網站內容編輯改版, 也可以在 Windows 或 Ubuntu 操作系統中進行配置, 成為可多人協同維護的網際內容管理系統.&lt;/p&gt;
&lt;p&gt;完成配置後的學員課程網頁, 將位於組織 (organization) 名稱為 mdecp2022 的帳號下, 且倉儲名稱將為: site-個人帳號名稱 (site 為 assignment 名稱). 至於個人 Github 帳號與學號的對應關聯則將登錄於 &lt;a href="https://github.com/mdecycu/studlist/tree/main/2022fall"&gt;https://github.com/mdecycu/studlist/tree/main/2022fall&lt;/a&gt; 目錄中的班級對應檔案.&lt;/p&gt;
&lt;p&gt;建立個人課程網頁示範:&lt;/p&gt;
&lt;h1&gt;有關筆記型電腦&lt;/h1&gt;
&lt;p&gt;綜一館八樓的電腦輔助設計室所配置的 PC, 雖然裝有還原卡, 但只要配合 USB 隨身碟與可攜套件, 應該足以應付 cp2022 計算機程式課程所需. 所以一般並不建議大一就購買筆記型電腦, 而是先善用系上所提供的 PC. 至於課外使用時段, 請參考系上電腦教室借用規定辦理, 通常週四與週五晚間未排課時段可以外借.&lt;/p&gt;
&lt;p&gt;至於符合機械設計工程系需求的筆記型電腦, 一般建議 i7 等級以上, 16 GB 記憶體, 並配置中階以上獨立顯卡. Windows 操作系統則建議使用專業 (Professional) 以上版本.&lt;/p&gt;
&lt;p&gt;校外電腦連接部分, 則需要每學年申請 VPN 使用授權, 下載學校購買的軟體或電子書, 只要設定校內 Proxy 即可, 但若要連網認證 SolidWorks 或 Matlab, 則需透過校內 VPN 連網.&lt;/p&gt;
&lt;h1&gt;Python Learning&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://coderslegacy.com/python/learning-the-basics/"&gt;https://coderslegacy.com/python/learning-the-basics/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coderslegacy.com/python/python-intermediate/"&gt;https://coderslegacy.com/python/python-intermediate/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coderslegacy.com/python/python-advanced/"&gt;https://coderslegacy.com/python/python-advanced/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Coding with Python and Repl.it: &lt;a href="https://i.ritzastatic.com/codewithreplit/e-books/coding-with-replit-export.pdf"&gt;https://i.ritzastatic.com/codewithreplit/e-books/coding-with-replit-export.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Learn Python the right way: &lt;a href="https://learnpythontherightway.com/#read"&gt;https://learnpythontherightway.com/#read&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-use-replit/"&gt;https://www.freecodecamp.org/news/how-to-use-replit/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python curriculum: &lt;a href="https://hackpacific.gitbooks.io/pythonium/content/"&gt;https://hackpacific.gitbooks.io/pythonium/content/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.codementor.io/@garethdwyer/introduction-to-machine-learning-with-python-and-repl-it-rln7ywkhc"&gt;https://www.codementor.io/@garethdwyer/introduction-to-machine-learning-with-python-and-repl-it-rln7ywkhc&lt;/a&gt;&lt;/p&gt;</content><category term="cp2022"></category><category term="w1"></category><category term="portable python"></category><category term="計算機程式"></category></entry><entry><title>有關 TCExam</title><link href="https://mde.tw/blog/about-tcexam.html" rel="alternate"></link><published>2022-09-01T12:00:00+08:00</published><updated>2022-09-06T22:44:59+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-01:/blog/about-tcexam.html</id><summary type="html">&lt;p&gt;這裡將收集與 TCExam 有關的資料內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡將收集與 TCExam 有關的資料內容.&lt;/p&gt;


&lt;h1&gt;虛擬主機上的 TCExam&lt;/h1&gt;
&lt;p&gt;相關程式檔案放在 c:\tcexam, 管理者帳號設為 tcexam. 啟動 exam.網域.名稱, 牽涉 nginx, php, pgsql 以及 tcexam 程式原始碼.&lt;/p&gt;
&lt;p&gt;nginx 主要負責將 http 跳轉至 https, 並且透過 fastcgi 啟動 php 解譯器的執行. 而 nginx 的 server 設定範例如下:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
server { 
    listen    98 ssl;
    listen    [::]:98 ssl;

    root c:/tmp/TCExam;

    server_name    exam.網域.名稱;
    ssl_certificate    C:/pj2022/stunnel/config/fullchain.pem;
    ssl_certificate_key    C:/pj2022/stunnel/config/privkey.pem;
    ssl_protocols    TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers    HIGH:!aNULL:!MD5;

    location /{ 
        index index.html index.php;
    }

    location ~ \.php$ {
        fastcgi_pass   127.0.0.1:9123;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}
&lt;/pre&gt;

&lt;p&gt;pgsql 以手動 start.bat 啟動, 設定檔案如下:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
@echo off
set /p DATA=&amp;lt;PGDATA.txt
cd %~dp0
bin\postgres -V
bin\pg_ctl -D %DATA% -l logfile.txt start
&lt;/pre&gt;

&lt;p&gt;其中的 PGDATA.txt 內容為 .\data, 表示資料庫內容存在 .\data 目錄中.&lt;/p&gt;
&lt;p&gt;一旦考試結束後, 以 stop.bat 關閉 pgsql:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
@echo off
set /p DATA=&amp;lt;PGDATA.txt
cd %~dp0
bin\pg_ctl -D %DATA% -l logfile.txt stop
&lt;/pre&gt;

&lt;h1&gt;TCExam 原始碼&lt;/h1&gt;
&lt;p&gt;由於目前所啟動的線上 TCExam 採用 2022.06.9 釋出的 PHP 8.1.7 版, 而 &lt;a href="https://github.com/tecnickcom/tcexam"&gt;https://github.com/tecnickcom/tcexam&lt;/a&gt; 最近修改日期為 2021.08.05, 因此直接從 TCExam github 網站 clone 下來的原始碼無法在最新版的 PHP 解譯環境中執行.&lt;/p&gt;
&lt;p&gt;因此啟動修改 TCExam, 令其可以在 PHP 8.1.7 中執行, 且 pdf 轉檔的部分, 也自行建立中文字型, 以便正確將考試內容轉為中英並存的格式.&lt;/p&gt;
&lt;p&gt;目前尚未完成的設定為 send mail 的部分.&lt;/p&gt;
&lt;p&gt;總結上述說明, 要啟動 TCExam 考試系統, 必須確認 nginx 已經啟動, 然後手動執行 pgsql 目錄下的 start.bat, 並且注意 c:\certbot 目錄下有關 https 數位簽章每 90 天必須設法手動或自動更新.&lt;/p&gt;
&lt;h1&gt;CYCU TCExam 主機&lt;/h1&gt;
&lt;p&gt;目前 exam dot cycu dot org 採用 10ff:1:0::1 設定, 使用 8GB 虛擬主機測試是否合用. 目前透過 nginx 管制, 只允許系上 IPv6 網段連線.&lt;/p&gt;</content><category term="tcexam"></category><category term="exam"></category><category term="php"></category><category term="pgsql"></category><category term="nginx"></category></entry><entry><title>Windows 常用指令</title><link href="https://mde.tw/blog/useful-windows-commands.html" rel="alternate"></link><published>2022-09-01T11:00:00+08:00</published><updated>2022-09-01T02:10:52+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-09-01:/blog/useful-windows-commands.html</id><summary type="html">&lt;p&gt;根據使用情境將常用的 Windows 指令加以整理.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;根據使用情境將常用的 Windows 指令加以整理.&lt;/p&gt;


&lt;h1&gt;密碼最長使用期限&lt;/h1&gt;
&lt;p&gt;Windows 10 &lt;a href="https://docs.microsoft.com/zh-tw/windows/security/threat-protection/security-policy-settings/maximum-password-age"&gt;密碼最長使用期限&lt;/a&gt; 內定為 42 天, 假如此一設定對使用者造成困擾, 可以從系統管理者執行的 cmd 中, 輸入 secpol.msc 開啟 &lt;a href="https://mitblog.pixnet.net/blog/post/40807765-%5Bwindows%5D-%E6%9C%AC%E6%A9%9F%E5%AE%89%E5%85%A8%E6%80%A7%E5%8E%9F%E5%89%87%28secpol.msc%29%E3%80%81%E7%BE%A4%E7%B5%84%E5%8E%9F%E5%89%87"&gt;本機安全性設定&lt;/a&gt;, 開啟"帳戶原則"中的"密碼原則", 然後將"密碼最長使用期限"從內定的  42 天改為 0, 表示密碼永不過期.&lt;/p&gt;</content><category term="windows"></category><category term="batch"></category><category term="commands"></category></entry><entry><title>Git 常用指令</title><link href="https://mde.tw/blog/useful-git-commands.html" rel="alternate"></link><published>2022-08-28T11:00:00+08:00</published><updated>2022-09-08T19:35:32+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-28:/blog/useful-git-commands.html</id><summary type="html">&lt;p&gt;根據使用情境將常用的 git 指令加以整理.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;根據使用情境將常用的 git 指令加以整理.&lt;/p&gt;


&lt;h1&gt;Git 簡介&lt;/h1&gt;
&lt;p&gt;Git 是一套分散式版次管理工具, 可在各種電腦操作系統中使用, 其目的是用來管理資料改版過程中的所有細節, 最常被用來管理程式套件的開發流程. 能夠配合 Git 使用常見的 Web based 服務有 Github, Gitlab 與 Bitbucket.&lt;/p&gt;
&lt;p&gt;由於利用電腦輔助各種產品設計開發的過程, 不僅牽涉許多文字與數位資料, 而且通常在不同時段, 會與許多不同專業的人士進行協同設計. 過程中若沒有完善的分散版次管理系統, 比較可能產生資料紛亂, 難以追蹤問題, 且團隊成員間針對協同資料間的權利與義務不容易有效釐清.&lt;/p&gt;
&lt;p&gt;以下列出使用 Git 分散式版次管理的優點:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;各開發者可以同步對同一文件或程式進行改版, 改版時無需上網&lt;/li&gt;
&lt;li&gt;所有提交的改版內容均會存檔, 一旦納入管理的資料不會丟失, 也不會查不出資料被誰改寫&lt;/li&gt;
&lt;li&gt;系統中明確儲存各階段各檔案的改版歷程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上列所謂同步開發的意思是, 只要各團隊成員了解專案的目標, 以及每次改版的動機, 就可以各自在同一時間, 直接對倉儲進行改版, 等到各成員分別將改版內容提交推送至遠端倉儲時, 若各改版內容產生衝突, 就可以依照實際需求進行處理後合併.&lt;/p&gt;
&lt;h1&gt;Git 基本概念&lt;/h1&gt;
&lt;p&gt;以下 Git 專有名詞說明翻譯自&lt;a href="https://hipert.unimore.it/people/paolob/pub/Calcolo_Parallelo/Slides/Git_Tutorial.pdf"&gt;這裡&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Snapshots (快照)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;快照是 git 追踪資料歷程的方式&lt;/li&gt;
&lt;li&gt;快照主要是記錄所有文件在特定時間點的狀態&lt;/li&gt;
&lt;li&gt;使用者可以決定何時拍快照以及拍那些文件資料&lt;/li&gt;
&lt;li&gt;使用者能夠擷取先前所拍的任何快照&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Commits (提交)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;對資料拍快照的動作稱為提交&lt;/li&gt;
&lt;li&gt;提交可以是動詞, 也可以是名詞, 例如: 提交這個程式, 或者已經完成幾次提交&lt;/li&gt;
&lt;li&gt;基本上改版專案就是由每次的提交所組成&lt;/li&gt;
&lt;li&gt;每一個提交都包含三種資料: 檔案的更動內容、與上一個提交的參照資料 (即所謂 parent commit)、一組 hash code (SHA-1 hashes).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中 hash code 長得像這樣: f2d2ec5069fc6776c80b3ad6b7cbde3cade4e&lt;/p&gt;
&lt;p&gt;Repositories (儲存庫或倉儲)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以簡寫為 repo&lt;/li&gt;
&lt;li&gt;倉儲指所有檔案與檔案改版歷程&lt;/li&gt;
&lt;li&gt;檔案改版歷程包含所有的提交&lt;/li&gt;
&lt;li&gt;倉儲資料可以存放在近端或遠端 (例如: Github 或 Gitlab)&lt;/li&gt;
&lt;li&gt;從遠端將倉儲內容取下的動作稱為 clone&lt;/li&gt;
&lt;li&gt;clone 倉儲的功能, 讓多人可以協同對同一倉儲改版&lt;/li&gt;
&lt;li&gt;從遠端將倉儲之外的提交內容取下的動作稱為 pulling 改版內容&lt;/li&gt;
&lt;li&gt;將近端的改版資料納入遠端倉儲的動作稱為 push 改版內容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Branches (分支)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;git 中的所有提交都存在某個分支上&lt;/li&gt;
&lt;li&gt;一個倉儲可以有許多的分支&lt;/li&gt;
&lt;li&gt;Github 目前的主要分支稱為 main&lt;/li&gt;
&lt;li&gt;在不影響主分支內容的情況下, 可以針對特定提交切出分支進行修改&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;從特定提交切出分支的示意圖如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/git_branching_off.png" width="600"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;HEAD &lt;/p&gt;
&lt;p&gt;HEAD 通常指 A reference to the most recent commit.&lt;/p&gt;
&lt;p&gt;Merging (合併)&lt;/p&gt;
&lt;p&gt;分支合併示意圖如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/git_merging_branches.png" width="600"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;如何提交?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在近端電腦上的資料版本稱為 Working Directory (工作目錄)&lt;/li&gt;
&lt;li&gt;準備將已經修改完的資料納入特定提交的動作稱為 Staging (暫存)&lt;/li&gt;
&lt;li&gt;將修改後的檔案放入暫存檔的指令為 git add, 可以利用 git add file.txt 暫存單一檔案或 git add . 暫存所有已經修改的檔案&lt;/li&gt;
&lt;li&gt;改版檔案進入暫存區之後, 可利用 git commit -m 加上提交字串完成提交, 意即對這些檔案拍快照 (Snapshots)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;git add . 之後執行 git commit -m "提交說明訊息" 的流程示意圖如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/git_commit_process.png" width="600"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;Rebasing、Revert and Cherry picking&lt;/p&gt;
&lt;p&gt;Rebase (資料取自 &lt;a href="https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase"&gt;https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;What is git rebase? From a content perspective, rebasing is changing the base of your branch from one commit to another making it appear as if you'd created your branch from a different commit. Internally, Git accomplishes this by creating new commits and applying them to the specified base.&lt;/p&gt;
&lt;p&gt;以下為 git rebase 示意圖:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/git_rebase.png" width="600"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;Revert: &lt;a href="https://www.atlassian.com/git/tutorials/undoing-changes/git-revert"&gt;https://www.atlassian.com/git/tutorials/undoing-changes/git-revert&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Git cherry pick: &lt;a href="https://www.atlassian.com/git/tutorials/cherry-pick"&gt;https://www.atlassian.com/git/tutorials/cherry-pick&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;remote add&lt;/h1&gt;
&lt;p&gt;git remote add 的使用情境是希望將某一個倉儲的完整歷程資料, 改存至另一個倉儲.&lt;/p&gt;
&lt;p&gt;假設原來的 cad2021_final 倉儲位於 mdecourse 帳號下, 現在想要將此倉儲的完整歷程資料, 轉存至 mdecycu 帳號下.&lt;/p&gt;
&lt;p&gt;先前準備: 要先在近端電腦設定好 mdecourse 與 mdecycu 對 git 的 &lt;a href="https://mde.tw/content/Token%20and%20SSH.html#ssh"&gt;SSH 公私鑰簽章設定&lt;/a&gt;. 且 mdecourse 對應的 putty session 為 github.com, 而 mdecycu 對應的 putty session 為 mdecycu.&lt;/p&gt;
&lt;p&gt;步驟一:  登入 github.com mdecycu 帳號, 建立一個空的 cad2021_final 倉儲, 也就是連 README.md 都先不加入的完全空的倉儲.&lt;/p&gt;
&lt;p&gt;步驟二: 將 cad2021_final 從 mdecycu 帳號下, git clone 至近端電腦.&lt;/p&gt;
&lt;p&gt;git clone --recurse-submodules git@github.com:mdecourse/cad2021_final.git&lt;/p&gt;
&lt;p&gt;因為 cad2021_final 倉儲在 mdecourse 帳號下設為 private, 因此需要透過 putty session github.com, 利用近端的 puttygen 所建立的 .ppk private key 與 github 上 OpenSSL 格式的 public 對應下, 才能夠透過 ssh 協定取下 cad2021_final 倉儲.&lt;/p&gt;
&lt;p&gt;步驟三: cd 至 cad2021_final 倉儲目錄, 以 git remote add 設定代號, 並對應至 mdecycu 帳號下的同名倉儲.&lt;/p&gt;
&lt;p&gt;git remote add mdecycu git@mdecycu:mdecycu/cad2021_final.git&lt;/p&gt;
&lt;p&gt;其中的 git remote add 為指令, 表示要加入一個遠端的連結代號, 而此代號名稱為 mdecycu, 隨後的 git@ 表示要利用 ssh 協定, 以 git 作為登入帳號, @ 後面的 mdecycu 為近端 putty 的 session 名稱, 而 :mdecycu 中的 mdecycu 則是 github 系統下的 mdecycu 帳號用戶名稱, /cad2021_final.git 則為先前已經建立的空倉儲.&lt;/p&gt;
&lt;p&gt;步驟四: 將 cad2021_final 倉儲內容, 以 git push 推送到 mdecycu 帳號下.&lt;/p&gt;
&lt;p&gt;git push mdecycu&lt;/p&gt;
&lt;h1&gt;recurse-submodules&lt;/h1&gt;
&lt;p&gt;當使用 git clone 倉儲時, 之所以要宣告 --recurse-submodules 選項命令, 是針對該倉儲的所有子模組, 包括子模組下的所有子模組, 也要同時取下.&lt;/p&gt;
&lt;p&gt;假如在第一時間沒能取下子模組, 之後可以利用  git submodule update --init --recursive 將所有子模組內容取下.&lt;/p&gt;
&lt;h1&gt;submodule add&lt;/h1&gt;
&lt;p&gt;git submodule add 隨後要加入 URL 指向某一倉儲, 表示要將該倉儲設為子模組, 然後指令還要再加上該子模組連結的對應代號.&lt;/p&gt;
&lt;p&gt;git submodule add https://github.com/mdecycu/cmsimde.git cmsimde&lt;/p&gt;
&lt;p&gt;表示要將 cmsimde 倉儲設為子模組, 且放入 cmsimde 目錄中.&lt;/p&gt;
&lt;h1&gt;Git 參考資料&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/zh-tw/v2"&gt;https://git-scm.com/book/zh-tw/v2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/git/git_tutorial.pdf"&gt;https://www.tutorialspoint.com/git/git_tutorial.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.irisa.fr/Anthony.Baire/git/git-for-beginners-handout.pdf"&gt;https://people.irisa.fr/Anthony.Baire/git/git-for-beginners-handout.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://indico.cern.ch/event/724719/contributions/2981043/attachments/1638054/2754736/Git_tutorial.pdf"&gt;https://indico.cern.ch/event/724719/contributions/2981043/attachments/1638054/2754736/Git_tutorial.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hipert.unimore.it/people/paolob/pub/Calcolo_Parallelo/Slides/Git_Tutorial.pdf"&gt;https://hipert.unimore.it/people/paolob/pub/Calcolo_Parallelo/Slides/Git_Tutorial.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="git"></category><category term="remote-add"></category><category term="recurse-submodules"></category></entry><entry><title>有關 Fossil SCM</title><link href="https://mde.tw/blog/about-fossil-scm.html" rel="alternate"></link><published>2022-08-27T13:00:00+08:00</published><updated>2022-09-03T20:51:47+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-27:/blog/about-fossil-scm.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.fossil-scm.org"&gt;Fossil SCM&lt;/a&gt; 是一套 Software Configuration Management 套件, 專門用於 &lt;a href="https://sqlite.org"&gt;SQLite&lt;/a&gt; 的原始碼管理.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a href="https://www.fossil-scm.org"&gt;Fossil SCM&lt;/a&gt; 是一套 Software Configuration Management 套件, 專門用於 &lt;a href="https://sqlite.org"&gt;SQLite&lt;/a&gt; 的原始碼管理.&lt;/p&gt;


&lt;p&gt;&lt;a href="https://www.fossil-scm.org"&gt;Fossil SCM&lt;/a&gt; 是一套冷門的系統, 感覺好像沒有太多單位或團體使用, 只是就分散式版次管理系統的角度來看, 其實是一套小而美且功能齊全的 SCM 系統, 接下來將對 &lt;a href="https://www.fossil-scm.org"&gt;Fossil SCM&lt;/a&gt; 進行初步介紹.&lt;/p&gt;
&lt;h1&gt;fossil init&lt;/h1&gt;
&lt;p&gt;起始一個 Fossil SCM 倉儲之前需要先從 &lt;a href="https://fossil-scm.org/home/uv/download.html"&gt;https://fossil-scm.org/home/uv/download.html&lt;/a&gt; 下載相應的檔案, 與 Portablegit 相比, Fossil SCM 工具無論在 Windows, Linux 或 Mac 操作系統, 都只有一個檔案, 且大小只有約 9MB.&lt;/p&gt;
&lt;p&gt;而起始 Fossil SCM 倉儲的指令與 Git 相同:&lt;/p&gt;
&lt;p&gt;fossil init&lt;/p&gt;
&lt;p&gt;只不過 Fossil SCM 在倉儲 clone 之後的檔案為一個壓縮檔案, 通常以 .fossil 作為副檔名, 其實這是一個 SQLite 資料庫檔案. 當使用者 clone Fossil SCM 倉儲至近端之後, 必須透過 fossil open 將最新的版本內容展開, 一般會建議, 擺放 .fossil 檔案的目錄中, 建立 working director 目錄, 建議命名為 wd, 然後在 wd 目錄之中, 再根據各倉儲檔案的名稱建立位於 wd 目錄下的子目錄, 而各 .fossil 倉儲的內容則在各自的 "wd\倉儲名稱" 目錄下展開.&lt;/p&gt;
&lt;p&gt;假如要將遠端的倉儲 clone 至遠端, 若採 https 協定, 其命令列語法為:&lt;/p&gt;
&lt;p&gt;fossil clone https://user_name@fossil.kmol.info/repository repository.fossil&lt;/p&gt;
&lt;p&gt;表示要將位於 fossil.kmol.info 主機上的 repository 倉儲, 以 https 協定 clone 至近端且存為 repository.fossil&lt;/p&gt;
&lt;p&gt;以一位於近端檔案架構的 repository.fossil 本身會帶有管理者的密碼設定, 而此一管理者帳號下對應的 local password 與 remote passwors 分屬於兩個不同的 repository.fossil, 當使用者要將近端改版資料推向遠端時, 依據的是遠端的管理者 passwors, 而近端的管理者密碼則在近端倉儲以 fossil web 進行網際啟動時之用. 換言之, 各個 Fossil SCM 倉儲壓縮檔案內所儲存的管理者帳號密碼, 主針對下游啟動服務時採用.&lt;/p&gt;
&lt;p&gt;至於在工作目錄下倉儲資料檔案中的改版資料, 一旦新增提交推送後, 不僅會將版本更新資料註記在近端對應的 .fossil 檔案中, 也會推向遠端對應的 .fossil 倉儲檔案.&lt;/p&gt;
&lt;p&gt;Fossil SCM project documentation: &lt;a href="https://www.fossil-scm.org/home/doc/trunk/www/embeddeddoc.wiki"&gt;https://www.fossil-scm.org/home/doc/trunk/www/embeddeddoc.wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fossil SCM unversioned content: &lt;a href="https://www.fossil-scm.org/home/doc/trunk/www/unvers.wiki"&gt;https://www.fossil-scm.org/home/doc/trunk/www/unvers.wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 Fossil SCM 倉儲中, 所謂的 unversioned content 指在改版紀錄中沒有保留改版資料的檔案, 倉儲中的 unversioned 內容只保留最新的版本, 且可以透過網際 /uvlist 列出無改版歷程的檔案列表, 並能透過網際 /uv/檔案名稱 進行下載.&lt;/p&gt;
&lt;p&gt;Fossil SCM 中的帳號必須具備 y capabilities 的權限才能 fossil uv sync -v 對倉儲中先前所加入的無版本檔案送到倉儲資料中.&lt;/p&gt;
&lt;p&gt;Fossil SCM 中的帳號最高管理者必須具備 s capabilities (setup 權限).&lt;/p&gt;
&lt;p&gt;Fossil SCM 倉儲改版時若刪除檔案, 則可以透過 fossil addremove 納入改版內容.&lt;/p&gt;
&lt;p&gt;將 uversioned_file_name 納入或移除倉儲中成為無版本管理內容:&lt;/p&gt;
&lt;p&gt;fossil uv add unversioned_file_name&lt;/p&gt;
&lt;p&gt;fossil uv delete unversioned_file_name&lt;/p&gt;
&lt;p&gt;fossil uv sync -v&lt;/p&gt;
&lt;p&gt;其他參考資料:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fossil-scm.org/home/help?cmd=unversioned"&gt;https://fossil-scm.org/home/help?cmd=unversioned&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdecourse.blogspot.com/2021/02/fossil-scm.html"&gt;Fossil SCM 使用案例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdecourse.blogspot.com/2021/02/fossil-scm-github.html"&gt;Fossil SCM 與 Github 整合&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdecourse.blogspot.com/2021/02/fossil-scm-on-ubuntu.html"&gt;Fossil SCM on Ubuntu&lt;/a&gt;&lt;/p&gt;</content><category term="fossil-scm"></category><category term="repository"></category><category term="scm"></category></entry><entry><title>有關 ethercalc</title><link href="https://mde.tw/blog/about-ethercalc.html" rel="alternate"></link><published>2022-08-27T12:00:00+08:00</published><updated>2022-08-27T23:17:33+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-27:/blog/about-ethercalc.html</id><summary type="html">&lt;p&gt;ethercalc 是一個網頁同步試算表.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;ethercalc 是一個網頁同步試算表.&lt;/p&gt;


&lt;h1&gt;有關 &lt;a href="https://ethercalc.net"&gt;ethercalc&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;若 &lt;a href="https://ethercalc.net"&gt;ethercalc&lt;/a&gt; 與 redis 合用, sheet 資料將會存入 /var/lib/redis/dump.rdb, 此一檔案儲存設定位於 /etc/redis/redis.conf 中的 dbfilename dump.rdb&lt;/p&gt;
&lt;p&gt;使用者若要以 root 身分檢視 /var/lib/redis/dump.rdb 可以透過 sudo -s 以 root 身分執行命令.&lt;/p&gt;
&lt;p&gt;若以 /etc/init.d/redis-server stop 關閉 redis, 然後執行 ethercalc, sheet 資料將會存在執行命令目錄下的 dump 目錄中.&lt;/p&gt;
&lt;p&gt;在結合 redis 使用下的 ethercalc, 若希望 reset /var/lib/redis/dump.rdb 中的資料:&lt;/p&gt;
&lt;p&gt;sudo -s&lt;/p&gt;
&lt;p&gt;/etc/init.d/redis-server stop&lt;/p&gt;
&lt;p&gt;rm /var/lib/redis/dump.rdb&lt;/p&gt;
&lt;p&gt;/etc/init.d/redis-server start&lt;/p&gt;
&lt;p&gt;ethercalc&lt;/p&gt;
&lt;p&gt;則 /var/lib/redis/dump.rdb 中為空資料.&lt;/p&gt;</content><category term="ethercalc"></category><category term="redis"></category><category term="dump"></category></entry><entry><title>編譯 Solvespace</title><link href="https://mde.tw/blog/compile-solvespace.html" rel="alternate"></link><published>2022-08-27T11:00:00+08:00</published><updated>2022-08-27T21:57:37+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-27:/blog/compile-solvespace.html</id><summary type="html">&lt;p&gt;這裡將利用 &lt;a href="https://www.msys2.org/"&gt;MSYS2&lt;/a&gt; 編譯 &lt;a href="https://github.com/solvespace/solvespace"&gt;Solvespace&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡將利用 &lt;a href="https://www.msys2.org/"&gt;MSYS2&lt;/a&gt; 編譯 &lt;a href="https://github.com/solvespace/solvespace"&gt;Solvespace&lt;/a&gt;.&lt;/p&gt;


&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/OHyeZz6XE8A" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;上列影片採用 &lt;a href="https://www.msys2.org/"&gt;MSYS2&lt;/a&gt;  編譯  &lt;a href="https://github.com/solvespace/solvespace"&gt;Solvespace&lt;/a&gt; 原始碼.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.msys2.org/"&gt;MSYS2&lt;/a&gt; 套件中名稱帶有 mingw-w64-x86_64 表示用於 MinGW 64 bit 操作系統&lt;/p&gt;
&lt;p&gt;更新系統核心組件:&lt;/p&gt;
&lt;p&gt;pacman -Syu&lt;/p&gt;
&lt;p&gt;安裝基本 C/C++ 編譯與開發工具:&lt;/p&gt;
&lt;p&gt;pacman -S mingw-w64-x86_64-toolchain&lt;/p&gt;
&lt;p&gt;安裝 CMake:&lt;/p&gt;
&lt;p&gt;pacman -S mingw-w64-x86_64-cmake&lt;/p&gt;
&lt;p&gt;編譯之前必須 rename Y:\msys64\usr\bin\sh.exe&lt;/p&gt;
&lt;p&gt;接著就是 build solvespace.exe&lt;/p&gt;
&lt;p&gt;以 git clone --recurse-submodules https://github.com/solvespace/solvespace.git 取下原始碼與子模組.&lt;/p&gt;
&lt;p&gt;接下來進入倉儲後執行編譯:&lt;/p&gt;
&lt;p&gt;cd solvespace&lt;/p&gt;
&lt;p&gt;mkdir build&lt;/p&gt;
&lt;p&gt;cd build&lt;/p&gt;
&lt;p&gt;cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release&lt;/p&gt;
&lt;p&gt;mingw32-make&lt;/p&gt;
&lt;p&gt;cd bin&lt;/p&gt;
&lt;p&gt;solvespace.exe 即可執行.&lt;/p&gt;
&lt;p&gt;編譯結束後, 之所以可以直接執行 solvespace.exe 是由於先前已經在啟動可攜程式系統時設定&lt;/p&gt;
&lt;p&gt;set path_msys2=%Disk%:\msys64_20210419\mingw64\bin;&lt;/p&gt;
&lt;p&gt;且將 path_msys2 納入 path 命令搜尋路徑中, 因此可以直接以命令列執行 solvespace.exe, 但是若要讓 solvespace.exe 獨立執行, 則需要 libwinpthread-1.dll to execute solvespace.exe&lt;/p&gt;
&lt;h1&gt;編譯 &lt;a href="https://github.com/Range-Software/range3"&gt;Range3&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;為了 compile &lt;a href="https://github.com/Range-Software/range3"&gt;Range3&lt;/a&gt;, &lt;a href="https://www.msys2.org/"&gt;MSYS2&lt;/a&gt; 除了mingw-w64-x86_64-toolchain 還必須加裝:&lt;/p&gt;
&lt;p&gt;pacman -Sy mingw-w64-x86_64-qt5
pacman -Sy mingw-w64-x86_64-qt5-static
pacman -Sy mingw-w64-x86_64-ffmpeg&lt;/p&gt;
&lt;p&gt;接著編譯 &lt;a href="https://github.com/Range-Software/range3"&gt;Range3&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;start Y:\msys64\mingw64.exe&lt;/p&gt;
&lt;p&gt;cd /y/tmp/range3&lt;/p&gt;
&lt;p&gt;./scripts/build.sh --clean &amp;amp;&amp;amp; ./scripts/create_package.sh&lt;/p&gt;
&lt;p&gt;而為了讓 svg 格式的 icons 能夠正確顯示, 必須納入 Qt5Svg.dll&lt;/p&gt;</content><category term="compilation"></category><category term="Solvespace"></category></entry><entry><title>編譯 CoppeliaSim 4.3.0 rev12</title><link href="https://mde.tw/blog/compile-coppeliasim-4.3.0-rev12.html" rel="alternate"></link><published>2022-08-26T11:00:00+08:00</published><updated>2022-08-27T21:19:25+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-26:/blog/compile-coppeliasim-4.3.0-rev12.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 採用 C++ 與 Qt 編寫, 安裝系統則利用 &lt;a href="https://www.pantaray.com/qsetup.html"&gt;QSetup&lt;/a&gt; 建立. 這裡希望編譯的是 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 原始碼中的 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 第 4.3.0 rev12 版, 是由 448 個 .cpp 編譯連結而成 coppeliaSim.dll, 檔案大小約為 9538 KB, 是 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 套件中最重要的核心程式庫 .&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 採用 C++ 與 Qt 編寫, 安裝系統則利用 &lt;a href="https://www.pantaray.com/qsetup.html"&gt;QSetup&lt;/a&gt; 建立. 這裡希望編譯的是 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 原始碼中的 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 第 4.3.0 rev12 版, 是由 448 個 .cpp 編譯連結而成 coppeliaSim.dll, 檔案大小約為 9538 KB, 是 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 套件中最重要的核心程式庫 .&lt;/p&gt;


&lt;h1&gt;config.pri&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 自 4.2.0 版之後, 所使用的 Lua 從 5.1 &lt;a href="https://www.coppeliarobotics.com/helpFiles/en/versionInfo.htm#coppeliaSim4.2.0"&gt;升級為 5.3&lt;/a&gt;, 配合設定的 config.pri 也必須修改如下:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
# location of boost headers:
    BOOST_INCLUDEPATH = "Y:/msys64_20210419/mingw64/include/boost"

# location of lua headers:
    LUA_INCLUDEPATH = "Y:/lua-5.3.5/src" 

# lua libraries to link:
    LUA_LIBS = "y:/lua-5.3.5/src/liblua.a" 

# qscintilla location:
    QSCINTILLA_DIR = "y:/QScintilla_gpl-2.11.2"

# qscintilla headers:
    QSCINTILLA_INCLUDEPATH = "$${QSCINTILLA_DIR}/include" "$${QSCINTILLA_DIR}/Qt4Qt5"

# qscintilla libraries to link:
    QSCINTILLA_LIBS = "$${QSCINTILLA_DIR}/libqscintilla2_qt5.dll.a" 

# Make sure if a config.pri is found one level above, that it will be used instead of this one:
    exists(../config.pri) { include(../config.pri) }
&lt;/pre&gt;

&lt;p&gt;由上列 config.pri 設定檔案可以得知, 編譯 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 之前, 必須要先編譯 lua-5.3.5 與 QScintilla_gpl-2.11.2, 分別取得對應的程式庫之後, 再編譯 CoppeliaSimLib.&lt;/p&gt;
&lt;h2&gt;編譯 Lua 5.3.5&lt;/h2&gt;
&lt;p&gt;Y:\lua-5.3.5&amp;gt;mingw32-make mingw&lt;/p&gt;
&lt;p&gt;可以建立 y:/lua-5.3.5/src/liblua.a&lt;/p&gt;
&lt;h2&gt;編譯 QScintilla&lt;/h2&gt;
&lt;p&gt;Location: Y:\QScintilla_gpl-2.11.2&lt;/p&gt;
&lt;p&gt;Compile:&lt;/p&gt;
&lt;p&gt;cd Qt4Qt5&lt;/p&gt;
&lt;p&gt;qmake -o Makefile qscintilla.pro&lt;/p&gt;
&lt;p&gt;mingw32-make&lt;/p&gt;
&lt;p&gt;to get libqscintilla2_qt5.dll.a under release directory&lt;/p&gt;
&lt;h2&gt;編譯 CoppeliaSimLib&lt;/h2&gt;
&lt;p&gt;config.pri 設定修改完成後, 執行 C:\acc_430_12\CoppeliaSimLib&amp;gt;qmake -o Makefile coppeliaSimLib.pro&lt;/p&gt;
&lt;p&gt;接著執行 C:\acc_430_12\CoppeliaSimLib&amp;gt;mingw32-make -f Makefile.Release&lt;/p&gt;
&lt;p&gt;編譯結束後, 可以在 Release 目錄中建立 coppeliaSim.dll, 這是 CoppeliaSim 的主要動態連結程式庫.&lt;/p&gt;
&lt;p&gt;下載可攜編譯系統: &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/Eb56ldJfZl9CiPU_5sb0-_4B5scF30r6z4FTQT__aWzkEA?e=zE8eVL"&gt;compile_copsim_cd2022.7z&lt;/a&gt; (for @gm users only)&lt;/p&gt;
&lt;p&gt;下載已經完成 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 編譯的檔案: &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/EYC3oMxKuoRCoLXauEsjuTwBNuZA1jSFH97wFDjNoCgwVQ?e=FaHKUP"&gt;acc_430_12_compile_Lib.7z&lt;/a&gt; (for @gm users only)&lt;/p&gt;
&lt;p&gt;下載啟動 coppeliasim.exe 所需的 dlls 檔案: &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/ETE26Bc_aipLjwlsoeIwVAsB-jeMPCLVjPLRVnvO_No06w?e=BAL8SC"&gt;dlls_for_coppeliasimlib_430_12.7z&lt;/a&gt; (for @gm users only)&lt;/p&gt;
&lt;h1&gt;編譯 coppeliaSimClientApplication&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/CoppeliaRobotics/coppeliaSimClientApplication"&gt;coppeliaSimClientApplication&lt;/a&gt; 是呼叫 &lt;a href="https://github.com/CoppeliaRobotics/CoppeliaSimLib"&gt;CoppeliaSimLib&lt;/a&gt; 動態連結程式庫的客戶端應用程式. 編譯時必須位於 programming 目錄中:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
C:\acc_430_12\programming&gt;git clone --recurse-submodules https://github.com/CoppeliaRobotics/coppeliaSimClientApplication.git
Cloning into 'coppeliaSimClientApplication'...
remote: Enumerating objects: 170, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (5/5), done.
Receiving objects:  86% (145/170)sed 4 (delta 1), pack-reused 164eceiving objects:  82% (140/1
Receiving objects: 100% (170/170), 32.92 KiB | 2.99 MiB/s, done.
Resolving deltas: 100% (100/100), done.

C:\acc_430_12\programming&gt;cd coppeliasimclientapplication

C:\acc_430_12\programming\coppeliaSimClientApplication&gt;git checkout coppeliasim-v4.3.0-rev12
Note: switching to 'coppeliasim-v4.3.0-rev12'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c &lt;new-branch-name&gt;

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 306a6c1 updated copyright

C:\acc_430_12\programming\coppeliaSimClientApplication&gt;
&lt;/pre&gt;

&lt;p&gt;將 C:\acc_430_12\programming\coppeliaSimClientApplication\config.pri 修改為:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
# lua libraries to link:
    LUA_LIBS = "y:/lua-5.3.5/src/liblua.a" 

# location of lua headers:
    LUA_INCLUDEPATH = "Y:/lua-5.3.5/src" 

exists(../config.pri) { include(../config.pri) }
&lt;/pre&gt;

&lt;p&gt;而在建立 coppeliaSim.exe 之前, 需要再編輯 coppeliaSim_resource.rc 檔案, 下載 coppeliaSim.ico, 並且開啟 coppeliaSim.pro 中第 42 行 RC_ICONS += coppeliaSim.ico 設定, 以便將 coppeliaSim.ico 圖像編譯後放入 coppeliaSim.exe, coppeliaSim_resource.rc 設定內容如下:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
#include &lt;windows.h&gt;

IDI_ICON1   ICON    DISCARDABLE "C:/acc_430_12/programming/coppeliaSimClientApplication/coppeliaSim.ico"

VS_VERSION_INFO VERSIONINFO
    FILEVERSION 0,0,0,0
    PRODUCTVERSION 0,0,0,0
    FILEFLAGSMASK 0x3fL
#ifdef _DEBUG
    FILEFLAGS VS_FF_DEBUG
#else
    FILEFLAGS 0x0L
#endif
    FILEOS VOS__WINDOWS32
    FILETYPE VFT_DLL
    FILESUBTYPE 0x0L
    BEGIN
        BLOCK "StringFileInfo"
        BEGIN
            BLOCK "040904b0"
            BEGIN
                VALUE "CompanyName", "\0"
                VALUE "FileDescription", "\0"
                VALUE "FileVersion", "0.0.0.0\0"
                VALUE "LegalCopyright", "\0"
                VALUE "OriginalFilename", "coppeliaSim.exe\0"
                VALUE "ProductName", "coppeliaSim\0"
                VALUE "ProductVersion", "0.0.0.0\0"
            END
        END
        BLOCK "VarFileInfo"
        BEGIN
            VALUE "Translation", 0x0409, 1200
        END
    END
/* End of Version info */
&lt;/pre&gt;

&lt;p&gt;接下來就可以利用 qmake 建立 Makefile.Release, 並利用 mingw32-make 建立 coppeliaSim.exe&lt;/p&gt;
&lt;p&gt;C:\acc_430_12\programming\coppeliaSimClientApplication&amp;gt;qmake -o Makefile coppeliaSim.pro&lt;/p&gt;
&lt;p&gt;C:\acc_430_12\programming\coppeliaSimClientApplication&amp;gt;mingw32-make -f Makefile.Release&lt;/p&gt;
&lt;p&gt;可以在 release 目錄中取得 coppeliaSim.exe&lt;/p&gt;
&lt;h2&gt;編譯 simExtDynamics&lt;/h2&gt;
&lt;p&gt;C:\acc_430_12\programming\simExtDynamics\build&amp;gt;cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release&lt;/p&gt;
&lt;p&gt;再執行:&lt;/p&gt;
&lt;p&gt;Y:\tmp\cop410\programming\simExtUI\build&amp;gt;mingw32-make&lt;/p&gt;</content><category term="compilation"></category><category term="CoppeliaSim"></category></entry><entry><title>電腦輔助設計室系統更新</title><link href="https://mde.tw/blog/renew-cad-lab-software.html" rel="alternate"></link><published>2022-08-24T11:00:00+08:00</published><updated>2022-09-01T23:37:09+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-24:/blog/renew-cad-lab-software.html</id><summary type="html">&lt;p&gt;今天收到通知, 電腦輔助設計室下週要重新更新套件, 管理員問我說: 內容需要更新嗎? 我的回答是: 不用, 只要 Windows 操作系統能正常運作就行, 所有上課的套件都使用可攜模式.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;今天收到通知, 電腦輔助設計室下週要重新更新套件, 管理員問我說: 內容需要更新嗎? 我的回答是: 不用, 只要 Windows 操作系統能正常運作就行, 所有上課的套件都使用可攜模式.&lt;/p&gt;


&lt;!-- 由於 md 無法加入 id 屬性, 因此針對標題的 h1 或 h2 直皆使用 html 設定 --&gt;
&lt;h2 id="hybrid"&gt;Hybrid 模式&lt;/h2&gt;

&lt;p&gt;雖然記不得是從何時開始在上課採用可攜套件模式, 但 2004 導入 NX3 時就已經採用 Portable 架構, 將程式存入隨身碟, 以 start.bat 啟動, 以 stop.bat 關閉, 所有與個人工作有關的資料與設定都可隨身帶走, 就好像擁有一台虛擬的筆電一樣, 唯一的缺點就是 USB 隨身碟的讀取速度沒有目前 Solid State 硬碟快, 因此從上學期電腦更新後, 就一直採用 Hybrid 的模式啟動套件.&lt;/p&gt;
&lt;p&gt;2022 Fall 將所使用的 Hybrid 套件可以從 &lt;a href="./../downloads/drive.7z"&gt;drive.7z&lt;/a&gt; 下載, 其中包含 start_ipv6.bat:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
@echo off

REM 將目前隨身碟所在目錄設為變數 Disk
set Disk=%cd%\data

REM 將SSD 上的 data 目錄設為 Local
REM for cadlab
set Local=C:\2021_cadlab_portable\data
REM for c1
REM set Local=C:\compile_copsim_cd2022\data

set HomePath=%Disk%\home_ipv6
set HomeDrive=%Disk%\home_ipv6
set Home=%Disk%\home_ipv6
set USERPROFILE=%Disk%\home_ipv6

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Local%\Python395\DLLs;%Local%\Python395\Lib;%Local%\Python395\Lib\site-packages;

set PYTHONHOME=%Local%\Python395

REM 使用 putty 設定 git ssh 連線
set GIT_SSH=%Disk%\putty\plink.exe

REM 設定跟 Python 有關的命令搜尋路徑
set path_python=%Local%\Python395;%Local%\Python395\Scripts;
set path_portablegit=%Local%\portablegit_2.31.1\bin;
set path_tcc=%Disk%\tcc;

path=%Disk%;%path_python%;%path_portablegit%;%path_tcc%;%path%;

reg.exe import %Disk%\2022_cdb.reg;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%\wScite\SciTE.exe
start /MIN %Disk%\wScite\SciTE.exe

Exit
&lt;/pre&gt;

&lt;p&gt;而 stop.bat 則為:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
@echo off

taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM scite.exe /F

REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F

EXIT
&lt;/pre&gt;

&lt;h1&gt;隨身攜帶的 git 倉儲&lt;/h1&gt;
&lt;p&gt;由於電腦輔助設計室中的電腦安裝了防寫系統, 因此使用者為了利用 Github 維護個人的倉儲, 除了使用個人的筆電, 最方便的還是隨身攜帶一個 USB 硬碟, 除了帶有常用的可攜的套件外, 還可在任何一台 Windwos 電腦中維護自己的 git 倉儲, 當然前提是, 可能要自帶合用的 portablegit 與 Python, 或者就連 NX2206 與 Coppeliasim 加上 MSYS2 都自己隨身帶著.&lt;/p&gt;</content><category term="chat"></category><category term="電腦輔助設計室"></category></entry><entry><title>建立可攜 Python 系統</title><link href="https://mde.tw/blog/Create-a-portable-python-system.html" rel="alternate"></link><published>2022-08-23T11:00:00+08:00</published><updated>2022-09-08T20:44:22+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-23:/blog/Create-a-portable-python-system.html</id><summary type="html">&lt;p&gt;這裡所謂的可攜 Python 系統, 是指能夠放入 USB 隨身碟中的 Python 解譯器. 整個過程分為三個部分. 包括 Python 核心程式, pip 以及安裝常用模組等過程.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡所謂的可攜 Python 系統, 是指能夠放入 USB 隨身碟中的 Python 解譯器. 整個過程分為三個部分. 包括 Python 核心程式, pip 以及安裝常用模組等過程.&lt;/p&gt;


&lt;h1&gt;動機&lt;/h1&gt;
&lt;p&gt;由於電腦輔助設計室中的電腦配置防寫系統, 大約每半年才更新一次, 為了及時配合不同課程所需,除了使用電腦操作系統中所安裝的 Python 外, 通常建議學員自行建立可直接放入 USB 隨身碟啟動的可攜 Python 解譯系統.&lt;/p&gt;
&lt;p&gt;使用可攜 Python 解譯系統的好處是, 可以在任何的 64 位元 Windows 操作系統中使用相同配置的 Python 解譯器. 且可同時將 portable git 與 scite 納入可攜系統, 採可攜的方式執行程式編寫, 並維護電腦輔助設計流程中所建立 github 倉儲內容.&lt;/p&gt;
&lt;h1&gt;建立步驟&lt;/h1&gt;
&lt;h2&gt;核心程式&lt;/h2&gt;
&lt;p&gt;已知從 &lt;a href="https://www.python.org/ftp/python/"&gt;https://www.python.org/ftp/python/&lt;/a&gt; 可以下載各版本的 Python .msi 安裝檔案, 且所下載的 .msi 可以直接以 &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/msiexec"&gt;msiexec.exe&lt;/a&gt; 解開內容, 而不需要經過操作系統的套件安裝流程.&lt;/p&gt;
&lt;p&gt;由於以下 Python 程式可以利用現有舊版的 Python 解譯器執行, 下載並解開最新版的 Python 可攜解譯器, 因此只要進入 cmd 命令視窗, 選擇所要配置 Portable Python 的目錄, 即可直接執行後完成第一階段的 Python 核心程式的配置.&lt;/p&gt;
&lt;p&gt;這裡以 Python 3.10.6 為例, 下載並解開所需的 Python 核心程式內容:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import urllib.request
import os

# basic files for Python installation
py_list = ["core", "dev", "exe", "lib", "tcltk", "tools"]
# Python version
version = "3.10.6"
# location for Portable Python
path = "c:\\tmp\\Python310"
# Python msi download URL
ftp = "https://www.python.org/ftp/python/" + version + "/amd64/"
extract_path = path + "\\extract"
# create directory
try:
    os.mkdir(path)
except:
    # path exists
    pass
# get Python installation msi files and extract into target dir
for i in py_list:
    filename = i + ".msi"
    url = ftp + filename
    # download basic python msi file
    urllib.request.urlretrieve(url, path+ "\\"+ filename)
    os.system("msiexec.exe /a " + path + "\\" + i + ".msi /qb targetdir=" + extract_path)
    # delete msi file
    os.remove(extract_path + "\\" + i + ".msi")
&lt;/pre&gt;

&lt;p&gt;執行結束後, path (在上述範例 path 為 "c:/tmp/Python310") 目錄中的 extract 子目錄即為可攜 Python 解譯器檔案. &lt;/p&gt;
&lt;h2&gt;安裝 pip&lt;/h2&gt;
&lt;p&gt;從 &lt;a href="https://bootstrap.pypa.io/get-pip.py"&gt;https://bootstrap.pypa.io/get-pip.py&lt;/a&gt; 可以下載 get-pip.py 檔案, 利用前面完成的 Python 核心程式可以在可攜 Python 程式的架構下安裝 pip 工具, 但必須先讓可攜的核心程式得以運作, 這時需要安排 start.bat 與 stop.bat&lt;/p&gt;
&lt;p&gt;安裝 pip 時, 先以 cmd 進入命令列視窗, 然後更換目錄至 get-pip.py 所在目錄後, 以 python get-pip.py 進行安裝.&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
Microsoft Windows [版本 10.0.19042.1706]
(c) Microsoft Corporation. 著作權所有，並保留一切權利。

C:\tmp\portable_python_3.10.6&gt;cd tmp

C:\tmp\portable_python_3.10.6\tmp&gt;python get-pip.py
Collecting pip
  Downloading pip-22.2.2-py3-none-any.whl (2.0 MB)
     ---------------------------------------- 2.0/2.0 MB 1.5 MB/s eta 0:00:00
Collecting setuptools
  Downloading setuptools-65.2.0-py3-none-any.whl (1.2 MB)
     ---------------------------------------- 1.2/1.2 MB 2.7 MB/s eta 0:00:00
Collecting wheel
  Downloading wheel-0.37.1-py2.py3-none-any.whl (35 kB)
Installing collected packages: wheel, setuptools, pip
Successfully installed pip-22.2.2 setuptools-65.2.0 wheel-0.37.1
&lt;/pre&gt;

&lt;p&gt;可攜 Python 安裝 pip 後, 就可以利用 pip list 列出目前所安裝的模組, 並接著安裝 cmsimde 所需模組.&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
C:\tmp\portable_python_3.10.6\tmp&gt;pip list
Package    Version
---------- -------
pip        22.2.2
setuptools 65.2.0
wheel      0.37.1

C:\tmp\portable_python_3.10.6\tmp&gt;pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl
&lt;/pre&gt;

&lt;p&gt;以下為用來啟動可攜 Python 的批次檔案:&lt;/p&gt;
&lt;p&gt;start.bat&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
@echo off

set PATH=%cd%

set HomePath=%cd%\home_ipv6
set HomeDrive=%cd%\home_ipv6
set Home=%cd%\home_ipv6
set USERPROFILE=%cd%\home_ipv6

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%cd%\Python310\DLLs;%cd%\Python310\Lib;%cd%\Python310\Lib\site-packages;
set PYTHONHOME=%cd%\Python310

REM for putty
set GIT_SSH=%cd%\putty\plink.exe

REM 設定跟 Python 有關的命令搜尋路徑
set path_python=%cd%\Python310;%cd%\Python310\Scripts;
REM 設定跟Git 有關的命令搜尋路徑
set path_git=%cd%\portablegit_2.31.1\bin;
set path_tcc=%cd%\tcc;

REM for execute scite directly
set path_scite=%cd%\wScite502\;

path=%cd%;%path_python%;%path_git%;%path_tcc%;%path_scite%;%path%;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %cd%\wScite502\SciTE.exe
start /MIN %cd%\wScite502\SciTE.exe

Exit
&lt;/pre&gt;

&lt;p&gt;以下為關閉可攜 Python 的批次檔:&lt;/p&gt;
&lt;p&gt;stop.bat&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
@echo off

taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM scite.exe /F
taskkill /IM cmd.exe /F

EXIT
&lt;/pre&gt;

&lt;h2&gt;安裝模組&lt;/h2&gt;
&lt;p&gt;pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl&lt;/p&gt;
&lt;p&gt;上述配置 pip 與模組&lt;a href="./../downloads/install_get-pip.py_and_cmsimde_modules.txt"&gt;安裝詳細過程紀錄&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/ETQ0EKIxNeVJhfs8t2NvsCgBn0NmW_sx4OuM5_YR2CSFFQ?e=fywLSa"&gt;portable_python_3.10.6.7z&lt;/a&gt; (for @gm users only)&lt;/p&gt;</content><category term="cp2022"></category><category term="portable-Python"></category></entry><entry><title>可攜 CoppeliaSim 4.3.0 rev12</title><link href="https://mde.tw/blog/portable-CoppeliaSim-4.3.0-rev12.html" rel="alternate"></link><published>2022-08-23T11:00:00+08:00</published><updated>2022-09-02T16:41:06+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-23:/blog/portable-CoppeliaSim-4.3.0-rev12.html</id><summary type="html">&lt;p&gt;CoppeliaSim 的安裝套件採用 &lt;a href="https://www.pantaray.com/qsetup.html"&gt;QSetup&lt;/a&gt; 製作, 即便在安裝過程可從 %temp% 中的暫存目錄 (例如: AppData\Local\Temp\SETUP_2639) 取得其 setup.exe 所解開的檔案, 但仍無法直接 extract 出完整的可攜 CoppeliaSim 目錄.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;CoppeliaSim 的安裝套件採用 &lt;a href="https://www.pantaray.com/qsetup.html"&gt;QSetup&lt;/a&gt; 製作, 即便在安裝過程可從 %temp% 中的暫存目錄 (例如: AppData\Local\Temp\SETUP_2639) 取得其 setup.exe 所解開的檔案, 但仍無法直接 extract 出完整的可攜 CoppeliaSim 目錄.&lt;/p&gt;


&lt;h1&gt;Portable CoppeliaSim&lt;/h1&gt;
&lt;p&gt;因此這裡所謂的可攜 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt;, 其實就是從操作系統完成安裝的目錄中取出資料, 然後加上存入操作系統中的 redistributable dll 檔案製作而成.&lt;/p&gt;
&lt;p&gt;其中的 vcRedist/vc2019redist_x64.exe 需要利用 &lt;a href="https://github.com/wixtoolset/wix3/releases/tag/wix3112rtm"&gt;Wix&lt;/a&gt; 解出 .msi 之後, 再利用 &lt;a href="https://github.com/Bioruebe/UniExtract2"&gt;UniExtract2&lt;/a&gt; 解出所需要的 .dll, 並將所有的 .dll 檔案放入可攜 CoppeliaSim 的根目錄中.&lt;/p&gt;
&lt;p&gt;解開 vc2019redist_x64.exe 的指令:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
wix311-binaries\dark.exe vc2019redist_x64.exe -x extracted
&lt;/pre&gt;

&lt;p&gt;表示要在 extracted 目錄中取得 extracted\AttachedContainer\packages\vcRuntimeMinimum_amd64\vc_runtimeMinimum_x64.msi 之後, 再利用 &lt;a href="https://github.com/Bioruebe/UniExtract2"&gt;UniExtract2&lt;/a&gt; 解開所需的 dll 檔案, 最後再放入 CoppeliaSim 根目錄. 啟動時直接執行 coppeliaSim.exe 即可.&lt;/p&gt;
&lt;h1 id="simscene"&gt;simscene XML&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 從 &lt;a href="https://www.coppeliarobotics.com/helpFiles/en/versionInfo.htm#coppeliaSim4.0.0"&gt;4.0.0 版&lt;/a&gt;開始, 提供 &lt;a href="https://mde.tw/pjcopsim/content/xmlFormat.html"&gt;XML 檔案格式&lt;/a&gt;的輸出入, 此功能允許使用者透過 &lt;a href="https://en.wikipedia.org/wiki/ASCII"&gt;ASCII&lt;/a&gt; 檔案格式建構 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 的&lt;a href="https://mde.tw/pjcopsim/content/scenes.html"&gt;場景&lt;/a&gt;. 其中與機電產品開發過程中的電腦輔助設計架構最直接關聯的就是, 使用者可以直接透過程式方法, 將設計零件以 &lt;a href="https://en.wikipedia.org/wiki/STL_(file_format)"&gt;STL&lt;/a&gt; 格式輸出後, 套接在使用者所建構的機電資&lt;a href="https://mde.tw/pjcopsim/content/scenes.html"&gt;場景&lt;/a&gt;中. 意即: 使用者可以直接從 MCAD 套件中將組立檔案轉進具有 &lt;a href="https://mde.tw/pjcopsim/content/joints.html"&gt;joints&lt;/a&gt;、&lt;a href="https://mde.tw/pjcopsim/content/cameras.html"&gt;Camera&lt;/a&gt;、&lt;a href="https://mde.tw/pjcopsim/content/visionSensors.html"&gt;Vision sensors&lt;/a&gt;、&lt;a href="https://mde.tw/pjcopsim/content/forceSensors.html"&gt;Force sensors&lt;/a&gt;、&lt;a href="https://mde.tw/pjcopsim/content/proximitySensors.html"&gt;Proximity sensors&lt;/a&gt;與控制 &lt;a href="https://mde.tw/pjcopsim/content/scripts.html"&gt;Scripts&lt;/a&gt; 的模擬環境, 而無需全部採手動轉檔方式, 在 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 圖形介面中進行組立、設定參數或配接各項模擬元件樹狀架構.&lt;/p&gt;
&lt;p&gt;當使用者從 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 將&lt;a href="https://mde.tw/pjcopsim/content/scenes.html"&gt;場景&lt;/a&gt; 存為 exhaustive sinscent &lt;a href="https://mde.tw/pjcopsim/content/xmlFormat.html"&gt;XML 檔案格式&lt;/a&gt; 後, 可以利用下列 Python 程式讀出其中的標註 (總數超過 326 個), 之後再設法利用 &lt;a href="https://www.leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 的 import-xml-tags data 設定解讀所有 tags 內容, 並以階層式架構呈現 :&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# from https://stackoverflow.com/questions/29596584/getting-a-list-of-xml-tags-in-file-using-xml-etree-elementtree
import xml.etree.ElementTree as ET

def leo_print(x):
    try:
        print(x)
    except:
        g.es(x)

# load and parse the file
xmlTree = ET.parse('two_link_slvs_shaft_simple.simscene.xml')

elemList = []

for elem in xmlTree.iter():
    elemList.append(elem.tag)

# now I remove duplicities - by convertion to set and back to list
elemList = list(set(elemList))

# Just printing out the result
try:
    print(elemList)
except:
    # echo string
    g.es(elemList)

for i in elemList:
    leo_print(i)
&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/ESXbxhDmlUhBmPTUqAdTrLEBjvaqzZupKcgviAmxWGQdjQ"&gt;CoppeliaSimEdu_4.3.0_rev12.7z&lt;/a&gt; (for @gm users only)&lt;/p&gt;</content><category term="cad2022"></category><category term="Coppeliasim"></category></entry><entry><title>2022 Fall CP 課程</title><link href="https://mde.tw/blog/2022-Fall-Intro-to-computer-programming.html" rel="alternate"></link><published>2022-08-19T11:00:00+08:00</published><updated>2022-09-08T19:35:32+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-19:/blog/2022-Fall-Intro-to-computer-programming.html</id><summary type="html">&lt;p&gt;2022 Fall 計算機程式的課程進度將放在 Weblog, 並且使用 mdecycu At cycu 登記 disqus. 所有與課程相關的問題, 都希望在各週 Weblog 下方的 disqus 詢答.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2022 Fall 計算機程式的課程進度將放在 Weblog, 並且使用 mdecycu At cycu 登記 disqus. 所有與課程相關的問題, 都希望在各週 Weblog 下方的 disqus 詢答.&lt;/p&gt;


&lt;h1&gt;課程評分&lt;/h1&gt;
&lt;p&gt;cp2022 課程評分項目請參考: &lt;a href="https://mde.tw/content/cp-syllabus.html"&gt;syllabus&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="commandline"&gt;命令提示字元&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/cmd"&gt;cmd&lt;/a&gt; (Command Line) 指令, 是 &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/windows-commands"&gt;Windows 命令&lt;/a&gt; 中的一種. 常用的命令提示字元視窗中的指令包括:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/echo"&gt;echo&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/dir"&gt;dir&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/cd"&gt;cd&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/ping"&gt;ping&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/set_1"&gt;set&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/rem"&gt;rem&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/start"&gt;start&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/path"&gt;path&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/reg"&gt;reg&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/exit"&gt;exit&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/taskkill"&gt;taskkill&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/powershell"&gt;powershell&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="networksetup"&gt;網路環境設定&lt;/h2&gt;

&lt;p&gt;由於希望能夠讓電腦輔助設計室中使用純 &lt;a href="https://en.wikipedia.org/wiki/IPv6"&gt;IPv6&lt;/a&gt; 網路設定上網, 開機啟動後, 可採管理員模式執行下列 batch file 進行&lt;a href="https://www.youtube.com/watch?v=DDIQTTk6HZs"&gt;網路環境設定&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;1_ipv6_network_setup.bat 通常放在隨身碟最外部.&lt;/p&gt;
&lt;pre class="brush:jscript"&gt;
REM Get-ExecutionPolicy -List
REM Set-ExecutionPolicy RemoteSigned
echo "disable ipv4 and setup proxy for ipv6"
SET CurrentDir=%~dp0
%windir%\system32\reg.exe import %CurrentDir%1_2022_cadlab_network_setup.reg
REM powershell -noexit -executionpolicy bypass -File %CurrentDir%1_disable_ipv4.ps1
powershell -executionpolicy bypass -File %CurrentDir%1_disable_ipv4.ps1
exit
&lt;/pre&gt;

&lt;p&gt;執行時, 需要 1_2022_cadlab_network_setup.reg 與 1_disable_ipv4.ps1 兩個檔案:&lt;/p&gt;
&lt;p&gt;1_2022_cadlab_network_setup.reg 主要是關閉自動偵測 &lt;a href="https://en.wikipedia.org/wiki/Proxy_server"&gt;proxy server&lt;/a&gt;, 且手動設定代理主機.&lt;/p&gt;
&lt;pre class="brush:jscript"&gt;
Windows Registry Editor Version 5.00

 [HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings]
 ; disable AutoDetect
"AutoDetect"=dword:00000000
"MigrateProxy"=dword:00000001
; enable Proxy
"ProxyEnable"=dword:00000001 
"ProxyHttp1.1"=dword:00000000 
"ProxyServer"="http://[2001:288:6004:17::42]:3128"
"ProxyOverride"="localhost;"
&lt;/pre&gt;

&lt;p&gt;1_disable_ipv4.ps1 為 &lt;a href="https://docs.microsoft.com/zh-tw/powershell/scripting/learn/ps101/00-introduction?view=powershell-7.2"&gt;Powershell 命令&lt;/a&gt;, 主要將所有網路卡上的 &lt;a href="https://en.wikipedia.org/wiki/IPv4"&gt;IPv4&lt;/a&gt; 網路設定取消 (因為現階段所安裝的某套件會啟動網路攻擊, 透過 &lt;a href="https://en.wikipedia.org/wiki/IPv4"&gt;IPv4&lt;/a&gt; 網路協定嘗試與外部網站連結取得後門權限).&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
Disable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip
&lt;/pre&gt;

&lt;p&gt;上述相關設定檔案: &lt;a href="./../downloads/cadlab_network_setup.zip"&gt;cadlab_network_setup.zip&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;W1 教學影片&lt;/h2&gt;
&lt;script&gt;
var winkVideoData_w1_1 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_w1_1" height="600" muted="true" width="800"&gt;
&lt;source src="./../downloads/cp/cp_w1_1.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;/div&gt;

&lt;h1&gt;建立 Github 帳號&lt;/h1&gt;
&lt;p&gt;請尚未建立 Github 帳號的學員, 至 &lt;a href="https://github.com/join"&gt;https://github.com/join&lt;/a&gt; 申請帳號. 課程評分項目將包含利用 &lt;a href="https://classroom.github.com"&gt;Github Classroom&lt;/a&gt; 建立的倉儲與網站內容 (透過 invite link). 2022fall Github 帳號與學號對照的倉儲位於 &lt;a href="https://github.com/mdecycu/studlist/tree/main/2022fall"&gt;https://github.com/mdecycu/studlist/tree/main/2022fall&lt;/a&gt;, w2 起將利用 &lt;a href="https://ethercalc.net/"&gt;https://ethercalc.net/&lt;/a&gt; 在線由各學員自行輸入, 之後若 Github 更動, 則可以透過 [Pull Requests] 提出修改請求.&lt;/p&gt;
&lt;h1&gt;建立 Onedrive 帳號&lt;/h1&gt;
&lt;p&gt;請尚未建立 Onedrive 帳號的學員登入 @gm 帳號後, 至 &lt;a href="https://www.microsoft.com/zh-tw/education/products/office"&gt;https://www.microsoft.com/zh-tw/education/products/office&lt;/a&gt;, 以 @gm 帳號申請 OneDrive 5TB 儲存權限. &lt;/p&gt;
&lt;h1&gt;利用 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 建立網頁&lt;/h1&gt;
&lt;p&gt;只要在 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 倉儲中放入 &lt;a href="https://en.wikipedia.org/wiki/HTML"&gt;HTML&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/CSS"&gt;css&lt;/a&gt; 與 &lt;a href="https://en.wikipedia.org/wiki/JavaScript"&gt;Javascript&lt;/a&gt;, 並且設定 &lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt; 對應的分支, &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 就會給定 Github_帳號.github.io/倉儲名稱 作為網址 (各學員課程網址將為: https://mdecp2022.github.io/site-學員_Github_帳號), 以 WWW 伺服器 serve 使用者所提供的網頁內容.&lt;/p&gt;
&lt;p&gt;除了配置在 &lt;a href="https://classroom.github.com"&gt;Github Classroom&lt;/a&gt; 的課程倉儲與網頁外, 學員也可以在登入 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 後, 利用 &lt;a href="https://github.com/mdecycu/cmsite"&gt;https://github.com/mdecycu/cmsite&lt;/a&gt; 作為 &lt;a href="https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template"&gt;template&lt;/a&gt;, 使用 &lt;a href="https://pages.github.com/"&gt;https://pages.github.com/&lt;/a&gt; 建立個人網頁, 並利用網頁 (https://Github_帳號.github.io) 建立個人簡歷 (&lt;a href="https://www.thebalancecareers.com/cv-vs-resume-2058495"&gt;Curriculum Vitae&lt;/a&gt;) 網站.&lt;/p&gt;
&lt;h2&gt;維護 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 上的網頁&lt;/h2&gt;
&lt;p&gt;在近端將動態網頁轉為靜態網頁後, &lt;a href="https://github.com/mdecycu/cmsimde/blob/4cf035f4dc75bafc2791b67e630ee34533ae50c4/up_dir/acp.bat"&gt;acp&lt;/a&gt; 至 &lt;a href="https://github.com"&gt;Github&lt;/a&gt; 倉儲.&lt;/p&gt;
&lt;h2&gt;Computer 簡介&lt;/h2&gt;
&lt;p&gt;以下資料取自: &lt;a href="https://mde.tw/content/Computer.html"&gt;https://mde.tw/content/Computer.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A computer is a digital electronic machine that can be programmed to carry out sequences of arithmetic or logical operations (computation) automatically. Modern computers can perform generic sets of operations known as programs. These programs enable computers to perform a wide range of tasks. A computer system is a "complete" computer that includes the hardware, operating system (main software), and peripheral equipment needed and used for "full" operation. This term may also refer to a group of computers that are linked and function together, such as a computer network or computer cluster.&lt;/p&gt;
&lt;p&gt;A broad range of industrial and consumer products use computers as control systems. Simple special-purpose devices like microwave ovens and remote controls are included, as are factory devices like industrial robots and computer-aided design, as well as general-purpose devices like personal computers and mobile devices like smartphones. Computers power the Internet, which links billions of other computers and users.&lt;/p&gt;
&lt;p&gt;Early computers were meant to be used only for calculations. Simple manual instruments like the abacus have aided people in doing calculations since ancient times. Early in the Industrial Revolution, some mechanical devices were built to automate long tedious tasks, such as guiding patterns for looms. More sophisticated electrical machines did specialized analog calculations in the early 20th century. The first digital electronic calculating machines were developed during World War II. The first semiconductor transistors in the late 1940s were followed by the silicon-based MOSFET (MOS transistor) and monolithic integrated circuit (IC) chip technologies in the late 1950s, leading to the microprocessor and the microcomputer revolution in the 1970s. The speed, power and versatility of computers have been increasing dramatically ever since then, with transistor counts increasing at a rapid pace (as predicted by Moore's law), leading to the Digital Revolution during the late 20th to early 21st centuries.&lt;/p&gt;
&lt;p&gt;Conventionally, a modern computer consists of at least one processing element, typically a central processing unit (CPU) in the form of a microprocessor, along with some type of computer memory, typically semiconductor memory chips. The processing element carries out arithmetic and logical operations, and a sequencing and control unit can change the order of operations in response to stored information. Peripheral devices include input devices (keyboards, mice, joystick, etc.), output devices (monitor screens, printers, etc.), and input/output devices that perform both functions (e.g., the 2000s-era touchscreen). Peripheral devices allow information to be retrieved from an external source and they enable the result of operations to be saved and retrieved. &lt;/p&gt;
&lt;h2&gt;Program 簡介&lt;/h2&gt;
&lt;p&gt;以下資料取自: &lt;a href="https://mde.tw/content/Program.html"&gt;https://mde.tw/content/Program.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A computer program is a sequence or set of instructions in a programming language for a computer to execute. Computer programs are one component of software, which also includes documentation and other intangible components.&lt;/p&gt;
&lt;p&gt;A computer program in its human-readable form is called source code. Source code needs another computer program to execute because computers can only execute their native machine instructions. Therefore, source code may be translated to machine instructions using the language's compiler. (Machine language programs are translated using an assembler.) The resulting file is called an executable. Alternatively, source code may execute within the language's interpreter.&lt;/p&gt;
&lt;p&gt;If the executable is requested for execution, then the operating system loads it into memory and starts a process. The central processing unit will soon switch to this process so it can fetch, decode, and then execute each machine instruction.&lt;/p&gt;
&lt;p&gt;If the source code is requested for execution, then the operating system loads the corresponding interpreter into memory and starts a process. The interpreter then loads the source code into memory to translate and execute each statement. Running the source code is slower than running an executable. Moreover, the interpreter must be installed on the computer. &lt;/p&gt;
&lt;h2&gt;Python 簡介&lt;/h2&gt;
&lt;p&gt;以下資料取自: &lt;a href="https://en.wikipedia.org/wiki/Python_(programming_language)"&gt;https://en.wikipedia.org/wiki/Python_(programming_language)&lt;/a&gt;, 充分了解上述內容後, 可進入 &lt;a href="https://mde.tw/content/Python.html"&gt;https://mde.tw/content/Python.html&lt;/a&gt; 開始練習如何根據需求編寫 Python 程式.&lt;/p&gt;
&lt;p&gt;Python is a high-level, interpreted, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation.&lt;/p&gt;
&lt;p&gt;Python is dynamically-typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly procedural), object-oriented and functional programming. It is often described as a "batteries included" language due to its comprehensive standard library.&lt;/p&gt;
&lt;p&gt;Guido van Rossum began working on Python in the late 1980s as a successor to the ABC programming language and first released it in 1991 as Python 0.9.0. Python 2.0 was released in 2000 and introduced new features such as list comprehensions, cycle-detecting garbage collection, reference counting, and Unicode support. Python 3.0, released in 2008, was a major revision that is not completely backward-compatible with earlier versions. Python 2 was discontinued with version 2.7.18 in 2020.&lt;/p&gt;
&lt;p&gt;Python consistently ranks as one of the most popular programming languages.&lt;/p&gt;</content><category term="cp2022"></category><category term="cp2022-Syllabus"></category><category term="計算機程式"></category></entry><entry><title>2022 Fall CAD 課程</title><link href="https://mde.tw/blog/2022-Fall-computer-aided-design-and-practices.html" rel="alternate"></link><published>2022-08-14T11:00:00+08:00</published><updated>2022-09-08T19:35:32+08:00</updated><author><name>mdecycu</name></author><id>tag:mde.tw,2022-08-14:/blog/2022-Fall-computer-aided-design-and-practices.html</id><summary type="html">&lt;p&gt;2022 Fall 電腦輔助設計與實習的教學主要介紹 NX 與 CoppeliaSim 在機械設計流程中的應用.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2022 Fall 電腦輔助設計與實習的教學主要介紹 NX 與 CoppeliaSim 在機械設計流程中的應用.&lt;/p&gt;


&lt;h1&gt;課程評分&lt;/h1&gt;
&lt;p&gt;cad2022 課程評分項目請參考: &lt;a href="https://mde.tw/content/cad-syllabus.html"&gt;syllabus&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;課程目標&lt;/h1&gt;
&lt;p&gt;利用 MCAD (Mechanical Computer Aided Design) 與 Robotic Simulator 建立一個未來能結合&lt;a href="https://en.wikipedia.org/wiki/Computer_vision#Recognition"&gt;影像辨識&lt;/a&gt;與&lt;a href="https://en.wikipedia.org/wiki/Deep_reinforcement_learning"&gt;深度強化學習&lt;/a&gt;探索用之&lt;a href="https://en.wikipedia.org/wiki/Digital_platform_(infrastructure)"&gt;數位平台&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;建立 Github 帳號&lt;/h1&gt;
&lt;p&gt;請尚未建立 Github 帳號的學員, 至 &lt;a href="https://github.com/join"&gt;https://github.com/join&lt;/a&gt; 申請帳號. 課程評分項目將包含利用 &lt;a href="https://classroom.github.com"&gt;Github Classroom&lt;/a&gt; 建立的倉儲與網站內容 (透過 invite link). 2022fall Github 帳號與學號對照的倉儲位於 &lt;a href="https://github.com/mdecycu/studlist/tree/main/2022fall"&gt;https://github.com/mdecycu/studlist/tree/main/2022fall&lt;/a&gt;, w2 起將利用 &lt;a href="https://ethercalc.net/"&gt;https://ethercalc.net/&lt;/a&gt; 在線由各學員自行輸入, 之後若 Github 更動, 則可以透過 &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"&gt;Pull Requests&lt;/a&gt; 提出修改請求.&lt;/p&gt;
&lt;p&gt;cad2022 課程中各學員的課程網址將為: https://mdecad2022.github.io/site-學員_Github_帳號&lt;/p&gt;
&lt;h1&gt;建立 Onedrive 帳號&lt;/h1&gt;
&lt;p&gt;請尚未建立 Onedrive 帳號的學員登入 @gm 帳號後, 至 &lt;a href="https://www.microsoft.com/zh-tw/education/products/office"&gt;https://www.microsoft.com/zh-tw/education/products/office&lt;/a&gt;, 以 @gm 帳號申請 OneDrive 5TB 儲存權限.&lt;/p&gt;
&lt;h1&gt;設計繪圖&lt;/h1&gt;
&lt;p&gt;以 NX2027.3401 或 NX12 建立 &lt;a href="https://cad.onshape.com/documents/0c152a911938d7352961b194/w/be224609ad39a35fc1439f95/e/a88aca1714001e9f86f16e49?renderMode=0&amp;amp;uiState=630374f7bf13ba67fd28a339"&gt;Foosball Table&lt;/a&gt; 零組件. 但新版 NX 所建立的零組件無法由舊版的 NX 開啟.&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/Eb7GeAUGMANEkijnWXGNH60BltYzKwkkffas3JhzgwnmxQ?e=K4HKXF"&gt;NX12.0.2.9_lite_cad2022.7z&lt;/a&gt; (for @gm users only, 1.20 GB, 解開後 6.24 GB)&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/EfvS63_7udVPhe-xlXrYPCMBVTUEEona5_QXwHdZD_8Vww?e=LNczOS"&gt;NX2027.3401_lite_cad2022.7z&lt;/a&gt; (for @gm users only, 1.97 GB, 解開後 7.49 GB)&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/EfC-9gy1PN9MmJtpD9VO5KcB3kehP6VVVgmQt3ej5D_BIQ?e=deXuWs"&gt;NX2027.3401_cad2022.7z&lt;/a&gt; (for @gm users only, 8.02 GB, 解開後 28.32 GB)&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/EU-fmibMpBZKg2ZiXmBlK-oBQj7wLV5YeMGI8rCI60NhmQ?e=EuxlyD"&gt;NX2007_documentation.7z&lt;/a&gt; (for @gm users only, 2.18 GB, 解開後 2.86 GB), 使用時執行 start_static.py 後, 以瀏覽器 http://localhost:7443 開啟, 或直接在 &lt;a href="http://c1.cycu.org:88"&gt;http://c1.cycu.org:88&lt;/a&gt; 開啟.&lt;/p&gt;
&lt;p&gt;線上 &lt;a href="https://docs.sw.siemens.com/en-US/release/209349590/NX%202007%20Series"&gt;NX2007 EN Documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;NX 零組件練習&lt;/h2&gt;
&lt;p&gt;請參考 &lt;a href="http://c1.cycu.org:88/static/design_day_one/index.html"&gt;Design Day One&lt;/a&gt; 資料, 並根據以 &lt;a href="http://www.ap242.org/"&gt;STEP 242&lt;/a&gt; 格式轉入 NX2027 之 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/EZO40xkPvQlOlZ1hayUaCFIBVSmv7wOZ2_WQHadb5k-PVA"&gt;Drill Press 零組件檔案&lt;/a&gt;各零件尺寸, 重新繪製各零組件, 過程請以 &lt;a href="https://www.debugmode.com/wink/"&gt;Wink3&lt;/a&gt; 影片錄製繪圖步驟並加入說明文字內容.&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/drill_press.png" width="600"&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;以 &lt;a href="https://www.onshape.com"&gt;Onshape&lt;/a&gt; 建立 &lt;a href="https://cad.onshape.com/documents/f942bc02bd60de603095cd9d/w/e3af941ed5245875e39138d0/e/af657625f78911e9e727c91a?renderMode=0&amp;amp;uiState=630373bdbf13ba67fd289e74"&gt;Foosball Table 零組件&lt;/a&gt;, &lt;a href="https://cad.onshape.com/documents/0c152a911938d7352961b194/w/be224609ad39a35fc1439f95/e/a88aca1714001e9f86f16e49?renderMode=0&amp;amp;uiState=630374f7bf13ba67fd28a339"&gt;Foosball Table&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;以 &lt;a href="https://solvespace.com"&gt;Solvespace&lt;/a&gt; (含套件編譯) 建立 Foosball Table 零組件.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://link.springer.com/book/10.1007/978-3-658-29589-9"&gt;Siemens NX for beginners – in a nutshell&lt;/a&gt; (in German) &lt;a href="https://storage.googleapis.com/sgw-extras/zip/2020/978-3-658-29589-9.zip"&gt;Extra Materials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://link.springer.com/book/10.1007/978-3-658-31561-0"&gt;Siemens NX for advanced users - in a nutshell&lt;/a&gt; (in German) &lt;a href="https://storage.googleapis.com/sgw-extras/zip/2020/978-3-658-31561-0.zip"&gt;Extra Materials&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;W1 教學影片&lt;/h2&gt;
&lt;script&gt;
var winkVideoData_w1_1 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_w1_1" height="600" muted="true" width="800"&gt;
&lt;source src="./../downloads/cad/cad_w1_1.mp4" type="video/mp4"/&gt;&lt;/video&gt;
&lt;/div&gt;

&lt;h1&gt;機電模擬&lt;/h1&gt;
&lt;p&gt;Robotic Simulator 部分將利用 &lt;a href="https://www.coppeliarobotics.com/"&gt;CoppeliaSim&lt;/a&gt; 4.3.0 rev12 建立 &lt;a href="https://cad.onshape.com/documents/0c152a911938d7352961b194/w/be224609ad39a35fc1439f95/e/a88aca1714001e9f86f16e49?renderMode=0&amp;amp;uiState=630374f7bf13ba67fd28a339"&gt;Foosball Table&lt;/a&gt; 模擬場景.&lt;/p&gt;
&lt;p&gt;下載 &lt;a href="https://gmnfuedutw-my.sharepoint.com/:u:/g/personal/yen_gm_nfu_edu_tw/ESXbxhDmlUhBmPTUqAdTrLEBjvaqzZupKcgviAmxWGQdjQ"&gt;CoppeliaSim 4.3.0 rev12.7z&lt;/a&gt; (for @gm users only)&lt;/p&gt;
&lt;p&gt;CoppeliaSim 使用者手冊: &lt;a href="https://mde.tw/pjcopsim"&gt;https://mde.tw/pjcopsim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/welcome.html"&gt;CoppeliaSim Overview&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/tutorials.html"&gt;CoppeliaSim Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/importExport.html"&gt;Import and Export&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/joints.html"&gt;Joints&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/buildingAModelTutorial.html"&gt;Build a clean model&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/simulation.html"&gt;Simulation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/designingDynamicSimulations.html"&gt;Design dynamic simulations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/writingCode.html"&gt;Writing code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde.tw/pjcopsim/content/externalFrontEnd.html"&gt;Web-browser based frontend&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;控制方法&lt;/h1&gt;
&lt;p&gt;Robotic player 組設計驅動機構並交由 Lua 或 Python 執行控制. Human player 組則直接由鍵盤或搖桿執行控制.&lt;/p&gt;
&lt;h1&gt;可行機構分析&lt;/h1&gt;
&lt;p&gt;Robotic player 平移與旋踢機構設計.&lt;/p&gt;
&lt;p&gt;Actuation 機構設計.&lt;/p&gt;
&lt;p&gt;送球循環機構設計.&lt;/p&gt;
&lt;h2&gt;網誌類別&lt;/h2&gt;
&lt;p&gt;Category:&lt;/p&gt;
&lt;p&gt;Cad2022 類別代表與 2022 Fall 電腦輔助設計實習相關進度的內容&lt;/p&gt;
&lt;p&gt;Tutorial 類別代表與課程有關的教學示範&lt;/p&gt;
&lt;p&gt;Misc 類別代表雜項內容&lt;/p&gt;
&lt;h2&gt;標籤&lt;/h2&gt;
&lt;p&gt;Tags:&lt;/p&gt;
&lt;p&gt;標籤則可以分為: 課程簡介或 w1, w2 等各週的相關教學內容.&lt;/p&gt;
&lt;p&gt;除了課程週次 Tags 之外, 也可以將文章分為 NX, Solvespace, Onshape, CoppeliaSim, Brython or Python, Leo Editor 與 Fossil SCM 等專門介紹 Tags.&lt;/p&gt;
&lt;p&gt;單篇文章可以加入多個 Tags 以逗點隔開.&lt;/p&gt;
&lt;p&gt;其他的文章則放入 Misc 類別.&lt;/p&gt;
&lt;h2&gt;解開 redist_x64.exe&lt;/h2&gt;
&lt;p&gt;C:\CoppeliaSimEdu_4.3.0_rev12\vcRedist&amp;gt;c:\wix311\dark.exe vc_2019redist_x64.exe -x test&lt;/p&gt;
&lt;p&gt;Use UniExtract to extract the .msi&lt;/p&gt;</content><category term="cad2022"></category><category term="課程簡介"></category><category term="w0"></category><category term="電腦輔助設計與實習"></category></entry></feed>